// Code generated by plugin/utils/gen_styles.dart DO NOT EDIT.

import 'package:rokwire_plugin/service/styles.dart';
import 'package:rokwire_plugin/ui/widgets/ui_image.dart';
import 'package:flutter/material.dart';

class AppColors {
    static Color get fillColorPrimary => Styles().colors.getColor('fillColorPrimary') ?? const Color(0xFF002855);
    static Color get fillColorPrimaryTransparent03 => Styles().colors.getColor('fillColorPrimaryTransparent03') ?? const Color(0x4D002855);
    static Color get fillColorPrimaryTransparent05 => Styles().colors.getColor('fillColorPrimaryTransparent05') ?? const Color(0x80002855);
    static Color get fillColorPrimaryTransparent09 => Styles().colors.getColor('fillColorPrimaryTransparent09') ?? const Color(0xE6002855);
    static Color get fillColorPrimaryTransparent015 => Styles().colors.getColor('fillColorPrimaryTransparent015') ?? const Color(0x26002855);
    static Color get textColorPrimary => Styles().colors.getColor('textColorPrimary') ?? const Color(0xFFFFFFFF);
    static Color get textColorPrimaryVariant => Styles().colors.getColor('textColorPrimaryVariant') ?? const Color(0xFFFFFFFF);
    static Color get textColorDisabled => Styles().colors.getColor('textColorDisabled') ?? const Color(0xFF5c5c5c);
    static Color get fillColorPrimaryVariant => Styles().colors.getColor('fillColorPrimaryVariant') ?? const Color(0xFF0F2040);
    static Color get fillColorSecondary => Styles().colors.getColor('fillColorSecondary') ?? const Color(0xFFE84A27);
    static Color get fillColorSecondaryTransparent05 => Styles().colors.getColor('fillColorSecondaryTransparent05') ?? const Color(0x80E84A27);
    static Color get fillColorSecondaryVariant => Styles().colors.getColor('fillColorSecondaryVariant') ?? const Color(0xFFCF3C1B);
    static Color get textColorSecondary => Styles().colors.getColor('textColorSecondary') ?? const Color(0xFFFFFFFF);
    static Color get textColorSecondaryVariant => Styles().colors.getColor('textColorSecondaryVariant') ?? const Color(0xFFFFFFFF);
    static Color get gradientColorPrimary => Styles().colors.getColor('gradientColorPrimary') ?? const Color(0xFF244372);
    static Color get surface => Styles().colors.getColor('surface') ?? const Color(0xFFFFFFFF);
    static Color get surfaceAccent => Styles().colors.getColor('surfaceAccent') ?? const Color(0xFFDADDE1);
    static Color get surfaceAccentTransparent15 => Styles().colors.getColor('surfaceAccentTransparent15') ?? const Color(0x26DADDE1);
    static Color get background => Styles().colors.getColor('background') ?? const Color(0xFFF5F5F5);
    static Color get backgroundVariant => Styles().colors.getColor('backgroundVariant') ?? const Color(0xFFE8E9EA);
    static Color get textSurface => Styles().colors.getColor('textSurface') ?? const Color(0xFF404040);
    static Color get textSurfaceTransparent15 => Styles().colors.getColor('textSurfaceTransparent15') ?? const Color(0x26404040);
    static Color get textSurfaceAccent => Styles().colors.getColor('textSurfaceAccent') ?? const Color(0xFF404040);
    static Color get textVariant => Styles().colors.getColor('textVariant') ?? const Color(0xff494949);
    static Color get textBackground => Styles().colors.getColor('textBackground') ?? const Color(0xFF404040);
    static Color get textBackgroundVariant => Styles().colors.getColor('textBackgroundVariant') ?? const Color(0xFF404040);
    static Color get textBackgroundVariant2 => Styles().colors.getColor('textBackgroundVariant2') ?? const Color(0xFFe7e7e7);
    static Color get accentColor1 => Styles().colors.getColor('accentColor1') ?? const Color(0xFFE84A27);
    static Color get accentColor2 => Styles().colors.getColor('accentColor2') ?? const Color(0xFF5FA7A3);
    static Color get accentColor3 => Styles().colors.getColor('accentColor3') ?? const Color(0xFF5182CF);
    static Color get accentColor4 => Styles().colors.getColor('accentColor4') ?? const Color(0xFF9318BB);
    static Color get iconColor => Styles().colors.getColor('iconColor') ?? const Color(0xFFE84A27);
    static Color get alert => Styles().colors.getColor('alert') ?? const Color(0xFFff0000);
    static Color get transparentWalletColor => Styles().colors.getColor('transparentWalletColor') ?? const Color(0xff0f2040);
    static Color get eventColor => Styles().colors.getColor('eventColor') ?? const Color(0xFFE54B30);
    static Color get diningColor => Styles().colors.getColor('diningColor') ?? const Color(0xFFF09842);
    static Color get placeColor => Styles().colors.getColor('placeColor') ?? const Color(0xFF62A7A3);
    static Color get mtdColor => Styles().colors.getColor('mtdColor') ?? const Color(0xFF2376E5);
    static Color get white => Styles().colors.getColor('white') ?? const Color(0xFFFFFFFF);
    static Color get whiteTransparent01 => Styles().colors.getColor('whiteTransparent01') ?? const Color(0x1AFFFFFF);
    static Color get whiteTransparent06 => Styles().colors.getColor('whiteTransparent06') ?? const Color(0x99ffffff);
    static Color get black => Styles().colors.getColor('black') ?? const Color(0xFF000000);
    static Color get blackTransparent06 => Styles().colors.getColor('blackTransparent06') ?? const Color(0x99000000);
    static Color get blackTransparent018 => Styles().colors.getColor('blackTransparent018') ?? const Color(0x30000000);
    static Color get blackTransparent038 => Styles().colors.getColor('blackTransparent038') ?? const Color(0x61000000);
    static Color get redTransparent01 => Styles().colors.getColor('redTransparent01') ?? const Color(0xF4FF4336);
    static Color get blueShade900 => Styles().colors.getColor('blueShade900') ?? const Color(0x0D47A1FF);
    static Color get mediumGray => Styles().colors.getColor('mediumGray') ?? const Color(0xFF717372);
    static Color get mediumGray1 => Styles().colors.getColor('mediumGray1') ?? const Color(0xFF535353);
    static Color get mediumGray2 => Styles().colors.getColor('mediumGray2') ?? const Color(0xFF979797);
    static Color get lightGray => Styles().colors.getColor('lightGray') ?? const Color(0xFFEDEDED);
    static Color get disabledTextColor => Styles().colors.getColor('disabledTextColor') ?? const Color(0xFFBDBDBD);
    static Color get disabledTextColorTwo => Styles().colors.getColor('disabledTextColorTwo') ?? const Color(0xFF868F9D);
    static Color get dividerLine => Styles().colors.getColor('dividerLine') ?? const Color(0xFF535353);
    static Color get dividerLineAccent => Styles().colors.getColor('dividerLineAccent') ?? const Color(0xFFDADADA);
    static Color get mango => Styles().colors.getColor('mango') ?? const Color(0xFFf29835);
    static Color get greenAccent => Styles().colors.getColor('greenAccent') ?? const Color(0xFF69F0AE);
    static Color get saferLocationWaitTimeColorRed => Styles().colors.getColor('saferLocationWaitTimeColorRed') ?? const Color(0xFFff0000);
    static Color get saferLocationWaitTimeColorYellow => Styles().colors.getColor('saferLocationWaitTimeColorYellow') ?? const Color(0xFFffff00);
    static Color get saferLocationWaitTimeColorGreen => Styles().colors.getColor('saferLocationWaitTimeColorGreen') ?? const Color(0xFF00ff00);
    static Color get saferLocationWaitTimeColorGrey => Styles().colors.getColor('saferLocationWaitTimeColorGrey') ?? const Color(0xFF808080);
    static Color get essentialSkillsCoachPurple => Styles().colors.getColor('essentialSkillsCoachPurple') ?? const Color(0xFF602f8c);
    static Color get essentialSkillsCoachPurpleAccent => Styles().colors.getColor('essentialSkillsCoachPurpleAccent') ?? const Color(0xFFae89cf);
    static Color get essentialSkillsCoachBlue => Styles().colors.getColor('essentialSkillsCoachBlue') ?? const Color(0xFF479ccf);
    static Color get essentialSkillsCoachBlueAccent => Styles().colors.getColor('essentialSkillsCoachBlueAccent') ?? const Color(0xFF146a9e);
    static Color get essentialSkillsCoachRed => Styles().colors.getColor('essentialSkillsCoachRed') ?? const Color(0xFFe84a27);
    static Color get essentialSkillsCoachRedAccent => Styles().colors.getColor('essentialSkillsCoachRedAccent') ?? const Color(0xFFa52a0e);
    static Color get essentialSkillsCoachOrange => Styles().colors.getColor('essentialSkillsCoachOrange') ?? const Color(0xFFf29936);
    static Color get essentialSkillsCoachOrangeAccent => Styles().colors.getColor('essentialSkillsCoachOrangeAccent') ?? const Color(0xFFd06d00);
    static Color get essentialSkillsCoachGreen => Styles().colors.getColor('essentialSkillsCoachGreen') ?? const Color(0xFF247c03);
    static Color get essentialSkillsCoachGreenAccent => Styles().colors.getColor('essentialSkillsCoachGreenAccent') ?? const Color(0xFF6aa554);
    static Color get essentialSkillsCoachCompleteGreen => Styles().colors.getColor('essentialSkillsCoachCompleteGreen') ?? const Color(0xFF64a70b);
    static Color get essentialSkillsCoachIncompleteGrey => Styles().colors.getColor('essentialSkillsCoachIncompleteGrey') ?? const Color(0xFF5c5c5c);
    static Color get textPrimary => Styles().colors.getColor('textPrimary') ?? const Color(0xFFFFFFFF);
    static Color get textAccent => Styles().colors.getColor('textAccent') ?? const Color(0xFF002855);
    static Color get textDark => Styles().colors.getColor('textDark') ?? const Color(0xFFFFFFFF);
    static Color get textMedium => Styles().colors.getColor('textMedium') ?? const Color(0xFFFFFFFF);
    static Color get textLight => Styles().colors.getColor('textLight') ?? const Color(0xFFFFFFFF);
    static Color get textDisabled => Styles().colors.getColor('textDisabled') ?? const Color(0xFFBDBDBD);
    static Color get iconPrimary => Styles().colors.getColor('iconPrimary') ?? const Color(0xFF002855);
    static Color get iconLight => Styles().colors.getColor('iconLight') ?? const Color(0xFFFFFFFF);
    static Color get iconDark => Styles().colors.getColor('iconDark') ?? const Color(0xFF404040);
    static Color get iconMedium => Styles().colors.getColor('iconMedium') ?? const Color(0xFFFFFFFF);
    static Color get iconDisabled => Styles().colors.getColor('iconDisabled') ?? const Color(0xFFBDBDBD);
    static Color get shadow => Styles().colors.getColor('shadow') ?? const Color(0x30000000);
    static Color get success => Styles().colors.getColor('success') ?? const Color(0xFF2E7D32);
}

class AppFontFamilies {
    static String get black => Styles().fontFamilies.fromCode('black') ?? 'ProximaNovaBlack';
    static String get blackItalic => Styles().fontFamilies.fromCode('black_italic') ?? 'ProximaNovaBlackIt';
    static String get bold => Styles().fontFamilies.fromCode('bold') ?? 'ProximaNovaBold';
    static String get boldItalic => Styles().fontFamilies.fromCode('bold_italic') ?? 'ProximaNovaBoldIt';
    static String get extraBold => Styles().fontFamilies.fromCode('extra_bold') ?? 'ProximaNovaExtraBold';
    static String get extraBoldItalic => Styles().fontFamilies.fromCode('extra_bold_italic') ?? 'ProximaNovaExtraBoldIt';
    static String get light => Styles().fontFamilies.fromCode('light') ?? 'ProximaNovaLight';
    static String get lightItalic => Styles().fontFamilies.fromCode('light_italic') ?? 'ProximaNovaLightIt';
    static String get medium => Styles().fontFamilies.fromCode('medium') ?? 'ProximaNovaMedium';
    static String get mediumItalic => Styles().fontFamilies.fromCode('medium_italic') ?? 'ProximaNovaMediumIt';
    static String get regular => Styles().fontFamilies.fromCode('regular') ?? 'ProximaNovaRegular';
    static String get regularItalic => Styles().fontFamilies.fromCode('regular_italic') ?? 'ProximaNovaRegularIt';
    static String get semiBold => Styles().fontFamilies.fromCode('semi_bold') ?? 'ProximaNovaSemiBold';
    static String get semiBoldItalic => Styles().fontFamilies.fromCode('semi_bold_italic') ?? 'ProximaNovaSemiBoldIt';
    static String get thin => Styles().fontFamilies.fromCode('thin') ?? 'ProximaNovaThin';
    static String get thinItalic => Styles().fontFamilies.fromCode('thin_italic') ?? 'ProximaNovaThinIt';
}

class AppTextStyles {
    //static TextStyle get tbd => Styles().textStyles.getTextStyle('_tbd');
    static TextStyle get testBase => Styles().textStyles.getTextStyle('test_base') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorSecondary);
    static TextStyle get testExtend => Styles().textStyles.getTextStyle('test_extend') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorSecondary);
    static TextStyle get testOverrides => Styles().textStyles.getTextStyle('test_overrides') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 32.0);
    static TextStyle get testOverrides2 => Styles().textStyles.getTextStyle('test_overrides2') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0);
    static TextStyle get testOverrides3 => Styles().textStyles.getTextStyle('test_overrides3') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 42.0);
    static TextStyle get testOverrides4 => Styles().textStyles.getTextStyle('test_overrides4') ?? TextStyle(fontSize: 42.0, color: AppColors.accentColor2);
    static TextStyle get testOverrides5 => Styles().textStyles.getTextStyle('test_overrides5') ?? TextStyle(fontSize: 42.0, color: AppColors.accentColor2);
    static TextStyle get testOverrides6 => Styles().textStyles.getTextStyle('test_overrides6') ?? TextStyle(color: AppColors.accentColor2, fontFamily: AppFontFamilies.bold, fontSize: 32.0);
    static TextStyle get testOverrides7 => Styles().textStyles.getTextStyle('test_overrides7') ?? TextStyle(color: AppColors.fillColorSecondary, fontFamily: AppFontFamilies.bold);
    static TextStyle get testOverrides8 => Styles().textStyles.getTextStyle('test_overrides8') ?? TextStyle(fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get testOverrides9 => Styles().textStyles.getTextStyle('test_overrides9') ?? TextStyle(fontSize: 24.0, color: AppColors.fillColorPrimary);
    //static TextStyle get usage => Styles().textStyles.getTextStyle('_usage');
    static TextStyle get headerBar => Styles().textStyles.getTextStyle('header_bar') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTextFat => Styles().textStyles.getTextStyle('widget.text.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold);
    static TextStyle get widgetTextSemiFat => Styles().textStyles.getTextStyle('widget.text.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.semiBold);
    static TextStyle get widgetTextMedium => Styles().textStyles.getTextStyle('widget.text.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium);
    static TextStyle get widgetTextRegular => Styles().textStyles.getTextStyle('widget.text.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular);
    static TextStyle get widgetHeadingHuge => Styles().textStyles.getTextStyle('widget.heading.huge') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 32.0, color: AppColors.white);
    static TextStyle get widgetHeadingHugeExtraFat => Styles().textStyles.getTextStyle('widget.heading.huge.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0, color: AppColors.white);
    static TextStyle get widgetHeadingExtraLarge => Styles().textStyles.getTextStyle('widget.heading.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetHeadingExtraLargeFat => Styles().textStyles.getTextStyle('widget.heading.extra_large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetHeadingLarge => Styles().textStyles.getTextStyle('widget.heading.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetHeadingLargeFat => Styles().textStyles.getTextStyle('widget.heading.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetHeadingLargeExtraFat => Styles().textStyles.getTextStyle('widget.heading.large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetHeadingMedium => Styles().textStyles.getTextStyle('widget.heading.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 18.0, color: AppColors.white);
    static TextStyle get widgetHeadingRegular => Styles().textStyles.getTextStyle('widget.heading.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetHeadingRegularFat => Styles().textStyles.getTextStyle('widget.heading.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetHeadingRegularFatDisabled => Styles().textStyles.getTextStyle('widget.heading.regular.fat.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.whiteTransparent06);
    static TextStyle get widgetHeadingRegularExtraFat => Styles().textStyles.getTextStyle('widget.heading.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetHeadingMediumSmall => Styles().textStyles.getTextStyle('widget.heading.medium_small') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetHeadingSmall => Styles().textStyles.getTextStyle('widget.heading.small') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.white);
    static TextStyle get widgetMessageDarkExtraLarge => Styles().textStyles.getTextStyle('widget.message.dark.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.black);
    static TextStyle get widgetMessageDarkSemiLargeFat => Styles().textStyles.getTextStyle('widget.message.dark.semi_large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.black);
    static TextStyle get widgetMessageDarkMedium => Styles().textStyles.getTextStyle('widget.message.dark.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.black);
    static TextStyle get widgetMessageHuge => Styles().textStyles.getTextStyle('widget.message.huge') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageHugeExtraFat => Styles().textStyles.getTextStyle('widget.message.huge.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageExtraLargeFat => Styles().textStyles.getTextStyle('widget.message.extra_large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageExtraLargeExtraFat => Styles().textStyles.getTextStyle('widget.message.extra_large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageMediumLargeFat => Styles().textStyles.getTextStyle('widget.message.medium_large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 22.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageLargeFat => Styles().textStyles.getTextStyle('widget.message.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageLarge => Styles().textStyles.getTextStyle('widget.message.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageLargeThin => Styles().textStyles.getTextStyle('widget.message.large.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageMedium => Styles().textStyles.getTextStyle('widget.message.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageMediumSemiThin => Styles().textStyles.getTextStyle('widget.message.medium.semi_thin') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageMediumThin => Styles().textStyles.getTextStyle('widget.message.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageRegular => Styles().textStyles.getTextStyle('widget.message.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageRegularSemiFat => Styles().textStyles.getTextStyle('widget.message.regular.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageRegularFat => Styles().textStyles.getTextStyle('widget.message.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageRegularExtraFat => Styles().textStyles.getTextStyle('widget.message.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageRegularFatAccent => Styles().textStyles.getTextStyle('widget.message.regular.fat.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetMessageSmall => Styles().textStyles.getTextStyle('widget.message.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageSmallSemiFat => Styles().textStyles.getTextStyle('widget.message.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageSmallFat => Styles().textStyles.getTextStyle('widget.message.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetMessageLightSmall => Styles().textStyles.getTextStyle('widget.message.light.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.mediumGray);
    static TextStyle get widgetMessageLightSmallSemiFat => Styles().textStyles.getTextStyle('widget.message.light.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.mediumGray);
    static TextStyle get widgetMessageLightRegular => Styles().textStyles.getTextStyle('widget.message.light.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.mediumGray);
    static TextStyle get widgetMessageLightVariantSmall => Styles().textStyles.getTextStyle('widget.message.light.variant.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.mediumGray2);
    static TextStyle get widgetMessageDarkRegular => Styles().textStyles.getTextStyle('widget.message.dark.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetTitleExtraHuge => Styles().textStyles.getTextStyle('widget.title.extra_huge') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleExtraHugeFat => Styles().textStyles.getTextStyle('widget.title.extra_huge.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleExtraHugeExtraFat => Styles().textStyles.getTextStyle('widget.title.extra_huge.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleHugeExtraFat => Styles().textStyles.getTextStyle('widget.title.huge.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleHuge => Styles().textStyles.getTextStyle('widget.title.huge') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleSemiHuge => Styles().textStyles.getTextStyle('widget.title.semi_huge') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 30.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleExtraLarge => Styles().textStyles.getTextStyle('widget.title.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleExtraLargeSpaced => Styles().textStyles.getTextStyle('widget.title.extra_large.spaced') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorPrimary, letterSpacing: 1.0);
    static TextStyle get widgetTitleExtraLargeExtraFat => Styles().textStyles.getTextStyle('widget.title.extra_large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleExtraLargeSemiFat => Styles().textStyles.getTextStyle('widget.title.extra_large.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMediumLargeExtraFat => Styles().textStyles.getTextStyle('widget.title.medium_large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 22.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMediumLarge => Styles().textStyles.getTextStyle('widget.title.medium_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 22.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleLarge => Styles().textStyles.getTextStyle('widget.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleLargeSemiFat => Styles().textStyles.getTextStyle('widget.title.large.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleLargeFat => Styles().textStyles.getTextStyle('widget.title.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleLargeExtraFat => Styles().textStyles.getTextStyle('widget.title.large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMedium => Styles().textStyles.getTextStyle('widget.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMediumSemiFat => Styles().textStyles.getTextStyle('widget.title.medium.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMediumFat => Styles().textStyles.getTextStyle('widget.title.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleMediumExtraFat => Styles().textStyles.getTextStyle('widget.title.medium.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleRegularFat => Styles().textStyles.getTextStyle('widget.title.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleRegularSemiFat => Styles().textStyles.getTextStyle('widget.title.regular.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleRegularExtraFat => Styles().textStyles.getTextStyle('widget.title.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleRegularMediumFat => Styles().textStyles.getTextStyle('widget.title.regular.medium_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleRegular => Styles().textStyles.getTextStyle('widget.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleSmall => Styles().textStyles.getTextStyle('widget.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleSmallSemiFat => Styles().textStyles.getTextStyle('widget.title.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleSmallFat => Styles().textStyles.getTextStyle('widget.title.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleSmallFatSpaced => Styles().textStyles.getTextStyle('widget.title.small.fat.spaced') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, letterSpacing: 1.0);
    static TextStyle get widgetTitleSmallDisabled => Styles().textStyles.getTextStyle('widget.title.small.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetTitleSmallFatDisabledSpaced => Styles().textStyles.getTextStyle('widget.title.small.fat.disabled.spaced') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.surfaceAccent, letterSpacing: 1.0);
    static TextStyle get widgetTitleTiny => Styles().textStyles.getTextStyle('widget.title.tiny') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleTinyHighlight => Styles().textStyles.getTextStyle('widget.title.tiny.highlight') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.white);
    static TextStyle get widgetTitleTinyExtraFat => Styles().textStyles.getTextStyle('widget.title.tiny.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 12.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTitleTinyExtraFatHighlight => Styles().textStyles.getTextStyle('widget.title.tiny.extra_fat.highlight') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 12.0, color: AppColors.white);
    static TextStyle get widgetTitleLightHugeFat => Styles().textStyles.getTextStyle('widget.title.light.huge.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 32.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightMediumLargeExtraFat => Styles().textStyles.getTextStyle('widget.title.light.medium_large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 22.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightLargeExtraFat => Styles().textStyles.getTextStyle('widget.title.light.large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightLargeFat => Styles().textStyles.getTextStyle('widget.title.light.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightLarge => Styles().textStyles.getTextStyle('widget.title.light.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightMediumFat => Styles().textStyles.getTextStyle('widget.title.light.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightRegularFat => Styles().textStyles.getTextStyle('widget.title.light.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightRegularThin => Styles().textStyles.getTextStyle('widget.title.light.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightRegular => Styles().textStyles.getTextStyle('widget.title.light.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightRegularExtraFatSpaced => Styles().textStyles.getTextStyle('widget.title.light.regular.extra_fat.spaced') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textColorPrimary, letterSpacing: 1.0);
    static TextStyle get widgetTitleLightSmall => Styles().textStyles.getTextStyle('widget.title.light.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightSmallFat => Styles().textStyles.getTextStyle('widget.title.light.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightSmallFatSpaced => Styles().textStyles.getTextStyle('widget.title.light.small.fat.spaced') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorPrimary, letterSpacing: 1.0);
    static TextStyle get widgetTitleLightLittleFat => Styles().textStyles.getTextStyle('widget.title.light.little.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleLightTiny => Styles().textStyles.getTextStyle('widget.title.light.tiny') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 10.0, color: AppColors.textColorPrimary);
    static TextStyle get widgetTitleDisabledMediumFat => Styles().textStyles.getTextStyle('widget.title.disabled.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.disabledTextColor);
    static TextStyle get widgetDetailExtraLargeFat => Styles().textStyles.getTextStyle('widget.detail.extra_large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailExtraLarge => Styles().textStyles.getTextStyle('widget.detail.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailLarge => Styles().textStyles.getTextStyle('widget.detail.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailLargeThin => Styles().textStyles.getTextStyle('widget.detail.large.thin') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailLargeFat => Styles().textStyles.getTextStyle('widget.detail.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailLargeExtraFat => Styles().textStyles.getTextStyle('widget.detail.large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailRegularExtraFat => Styles().textStyles.getTextStyle('widget.detail.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailRegularFat => Styles().textStyles.getTextStyle('widget.detail.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailRegular => Styles().textStyles.getTextStyle('widget.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailMedium => Styles().textStyles.getTextStyle('widget.detail.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailSmall => Styles().textStyles.getTextStyle('widget.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailSmallSemiFat => Styles().textStyles.getTextStyle('widget.detail.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailSmallFat => Styles().textStyles.getTextStyle('widget.detail.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDetailLightSmall => Styles().textStyles.getTextStyle('widget.detail.light.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.mediumGray);
    static TextStyle get widgetDetailLightSmallThin => Styles().textStyles.getTextStyle('widget.detail.light.small.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.mediumGray);
    static TextStyle get widgetDetailLightRegular => Styles().textStyles.getTextStyle('widget.detail.light.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.mediumGray);
    static TextStyle get widgetDetailVariantRegular => Styles().textStyles.getTextStyle('widget.detail.variant.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textVariant);
    static TextStyle get widgetDescriptionExtraLarge => Styles().textStyles.getTextStyle('widget.description.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 26.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionMediumLarge => Styles().textStyles.getTextStyle('widget.description.medium_large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 22.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionLarge => Styles().textStyles.getTextStyle('widget.description.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionLargeFat => Styles().textStyles.getTextStyle('widget.description.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionMedium => Styles().textStyles.getTextStyle('widget.description.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionMediumFat => Styles().textStyles.getTextStyle('widget.description.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionMediumFatHighlight => Styles().textStyles.getTextStyle('widget.description.medium.fat.highlight') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.white);
    static TextStyle get widgetDescriptionRegularThin => Styles().textStyles.getTextStyle('widget.description.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionRegular => Styles().textStyles.getTextStyle('widget.description.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionRegularHighlight => Styles().textStyles.getTextStyle('widget.description.regular.highlight') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetDescriptionRegularUnderline => Styles().textStyles.getTextStyle('widget.description.regular.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetDescriptionRegularFat => Styles().textStyles.getTextStyle('widget.description.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionSmall => Styles().textStyles.getTextStyle('widget.description.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionSmallUnderline => Styles().textStyles.getTextStyle('widget.description.small_underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, decoration: TextDecoration.underline);
    static TextStyle get widgetDescriptionSmallFat => Styles().textStyles.getTextStyle('widget.description.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetDescriptionSmallFatSemiExpanded => Styles().textStyles.getTextStyle('widget.description.small.fat.semi_expanded') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, letterSpacing: 0.86);
    static TextStyle get widgetDescriptionDarkMediumFat => Styles().textStyles.getTextStyle('widget.description.dark.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.black);
    static TextStyle get widgetDescriptionDarkSmall => Styles().textStyles.getTextStyle('widget.description.dark.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.black);
    static TextStyle get widgetDescriptionVariantRegular => Styles().textStyles.getTextStyle('widget.description.variant.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textVariant);
    static TextStyle get widgetDescriptionVariantRegularThin => Styles().textStyles.getTextStyle('widget.description.variant.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textVariant);
    static TextStyle get widgetErrorRegular => Styles().textStyles.getTextStyle('widget.error.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.alert);
    static TextStyle get widgetErrorRegularFat => Styles().textStyles.getTextStyle('widget.error.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.alert);
    static TextStyle get widgetItemLarge => Styles().textStyles.getTextStyle('widget.item.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textBackground);
    static TextStyle get widgetItemLargeFat => Styles().textStyles.getTextStyle('widget.item.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textBackground);
    static TextStyle get widgetItemMediumFat => Styles().textStyles.getTextStyle('widget.item.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textBackground);
    static TextStyle get widgetItemMediumExtraFat => Styles().textStyles.getTextStyle('widget.item.medium.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 18.0, color: AppColors.textBackground);
    static TextStyle get widgetItemMedium => Styles().textStyles.getTextStyle('widget.item.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textBackground);
    static TextStyle get widgetItemRegularExtraFat => Styles().textStyles.getTextStyle('widget.item.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetItemRegularFat => Styles().textStyles.getTextStyle('widget.item.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetItemRegularThin => Styles().textStyles.getTextStyle('widget.item.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetItemRegularUnderlineThin => Styles().textStyles.getTextStyle('widget.item.regular_underline.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground, decoration: TextDecoration.underline);
    static TextStyle get widgetItemRegular => Styles().textStyles.getTextStyle('widget.item.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetItemSmallFat => Styles().textStyles.getTextStyle('widget.item.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetItemSmall => Styles().textStyles.getTextStyle('widget.item.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetItemSmallThin => Styles().textStyles.getTextStyle('widget.item.small.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetItemSmallThinHighlight => Styles().textStyles.getTextStyle('widget.item.small.thin.highlight') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetItemSmallThinSpaced => Styles().textStyles.getTextStyle('widget.item.small.thin.spaced') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textBackground, letterSpacing: 1.0);
    static TextStyle get widgetItemSmallThinItalic => Styles().textStyles.getTextStyle('widget.item.small.thin.italic') ?? TextStyle(fontFamily: AppFontFamilies.regularItalic, fontSize: 14.0, color: AppColors.textBackground, letterSpacing: 1.0);
    static TextStyle get widgetItemSmallSemiFat => Styles().textStyles.getTextStyle('widget.item.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetItemTinyExtraFat => Styles().textStyles.getTextStyle('widget.item.tiny.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetItemTinyFat => Styles().textStyles.getTextStyle('widget.item.tiny.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetItemTiny => Styles().textStyles.getTextStyle('widget.item.tiny') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetItemTinyThin => Styles().textStyles.getTextStyle('widget.item.tiny.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetLabelMediumFat => Styles().textStyles.getTextStyle('widget.label.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetLabelRegularFat => Styles().textStyles.getTextStyle('widget.label.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetLabelRegularThin => Styles().textStyles.getTextStyle('widget.label.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetLabelSmallFat => Styles().textStyles.getTextStyle('widget.label.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetLabelSmallFatSpaced => Styles().textStyles.getTextStyle('widget.label.small.fat.spaced') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorSecondary, letterSpacing: 1.0);
    static TextStyle get widgetLabelSmallExtraFat => Styles().textStyles.getTextStyle('widget.label.small.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 14.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetLabelSmallExtraFatSpaced => Styles().textStyles.getTextStyle('widget.label.small.extra_fat.spaced') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 14.0, color: AppColors.fillColorSecondary, letterSpacing: 1.0);
    static TextStyle get widgetLabelTinyFat => Styles().textStyles.getTextStyle('widget.label.tiny.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetInfoLarge => Styles().textStyles.getTextStyle('widget.info.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 22.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoMedium => Styles().textStyles.getTextStyle('widget.info.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoMediumUnderline => Styles().textStyles.getTextStyle('widget.info.medium.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textSurface, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetInfoMediumItalic => Styles().textStyles.getTextStyle('widget.info.medium.italic') ?? TextStyle(fontFamily: AppFontFamilies.regularItalic, fontSize: 18.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoMediumFat => Styles().textStyles.getTextStyle('widget.info.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoRegularThin => Styles().textStyles.getTextStyle('widget.info.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoRegularThinItalic => Styles().textStyles.getTextStyle('widget.info.regular.thin.italic') ?? TextStyle(fontFamily: AppFontFamilies.regularItalic, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoRegular => Styles().textStyles.getTextStyle('widget.info.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoRegularFat => Styles().textStyles.getTextStyle('widget.info.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoRegularExtraFat => Styles().textStyles.getTextStyle('widget.info.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoSmall => Styles().textStyles.getTextStyle('widget.info.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoSmallMediumFat => Styles().textStyles.getTextStyle('widget.info.small.medium_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoSmallFat => Styles().textStyles.getTextStyle('widget.info.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetInfoTiny => Styles().textStyles.getTextStyle('widget.info.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurface);
    static TextStyle get widgetTabSelected => Styles().textStyles.getTextStyle('widget.tab.selected') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetTabNotSelected => Styles().textStyles.getTextStyle('widget.tab.not_selected') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleEnabled => Styles().textStyles.getTextStyle('widget.button.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleDisabled => Styles().textStyles.getTextStyle('widget.button.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonDisabledTitleLargeFat => Styles().textStyles.getTextStyle('widget.button.disabled.title.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonDisabledTitleLargeFatVariant => Styles().textStyles.getTextStyle('widget.button.disabled.title.large.fat.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimaryTransparent03);
    static TextStyle get widgetButtonDisabledTitleLargeFatVariantTwo => Styles().textStyles.getTextStyle('widget.button.disabled.title.large.fat.variant_two') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.disabledTextColorTwo);
    static TextStyle get widgetButtonDisabledTitleMediumFatVariant => Styles().textStyles.getTextStyle('widget.button.disabled.title.medium.fat.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent03);
    static TextStyle get widgetButtonDisabledTitleMediumFatVariantTwo => Styles().textStyles.getTextStyle('widget.button.disabled.title.medium.fat.variant_two') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.disabledTextColorTwo);
    static TextStyle get widgetButtonDisabledTitleSmallFat => Styles().textStyles.getTextStyle('widget.button.disabled.title.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonTitleExtraLarge => Styles().textStyles.getTextStyle('widget.button.title.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 26.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleLargeFat => Styles().textStyles.getTextStyle('widget.button.title.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleLargeFatVariant => Styles().textStyles.getTextStyle('widget.button.title.large.fat.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get widgetButtonTitleLargeFatVariant2 => Styles().textStyles.getTextStyle('widget.button.title.large.fat.variant2') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.surface);
    static TextStyle get widgetButtonTitleLargeFatVariant3 => Styles().textStyles.getTextStyle('widget.button.title.large.fat.variant3') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonTitleLargeFatSecondary => Styles().textStyles.getTextStyle('widget.button.title.large.fat.secondary') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleLargeThin => Styles().textStyles.getTextStyle('widget.button.title.large.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleRegular => Styles().textStyles.getTextStyle('widget.button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleRegularVariant => Styles().textStyles.getTextStyle('widget.button.title.regular.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get widgetButtonTitleRegularVariant2 => Styles().textStyles.getTextStyle('widget.button.title.regular.variant2') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.surface);
    static TextStyle get widgetButtonTitleRegularVariant3 => Styles().textStyles.getTextStyle('widget.button.title.regular.variant3') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonTitleRegularUnderline => Styles().textStyles.getTextStyle('widget.button.title.regular.underline') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleRegularThin => Styles().textStyles.getTextStyle('widget.button.title.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleRegularThinUnderline => Styles().textStyles.getTextStyle('widget.button.title.regular.thin.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMedium => Styles().textStyles.getTextStyle('widget.button.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleMediumFat => Styles().textStyles.getTextStyle('widget.button.title.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleMediumFatVariant => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get widgetButtonTitleMediumFatVariant2 => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.variant2') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.surface);
    static TextStyle get widgetButtonTitleMediumFatVariant3 => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.variant3') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetButtonTitleMediumThin => Styles().textStyles.getTextStyle('widget.button.title.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleMediumThinSecondary => Styles().textStyles.getTextStyle('widget.button.title.medium.thin.secondary') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumFatSecondary => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.secondary') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumUnderline => Styles().textStyles.getTextStyle('widget.button.title.medium.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumUnderlineHighlight => Styles().textStyles.getTextStyle('widget.button.title.medium.underline.highlight') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.white);
    static TextStyle get widgetButtonTitleMediumFatUnderline => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.underline') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary, height: 1.61);
    static TextStyle get widgetButtonTitleMediumFatUnderlineHighlight => Styles().textStyles.getTextStyle('widget.button.title.medium.fat.underline.highlight') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.white, height: 1.61);
    static TextStyle get widgetButtonTitleSmall => Styles().textStyles.getTextStyle('widget.button.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleSmallUnderline => Styles().textStyles.getTextStyle('widget.button.title.small.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleSmallFat => Styles().textStyles.getTextStyle('widget.button.title.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleSmallFatUnderline => Styles().textStyles.getTextStyle('widget.button.title.small.fat.underline') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleSmallSemiFat => Styles().textStyles.getTextStyle('widget.button.title.small.semi_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetButtonTitleSmallSemiFatUnderline => Styles().textStyles.getTextStyle('widget.button.title.small.semi_fat.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonDescriptionMedium => Styles().textStyles.getTextStyle('widget.button.description.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get widgetButtonDescriptionSmall => Styles().textStyles.getTextStyle('widget.button.description.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetButtonDescriptionTiny => Styles().textStyles.getTextStyle('widget.button.description.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurface);
    static TextStyle get widgetLinkButtonTitleRegular => Styles().textStyles.getTextStyle('widget.link.button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorSecondary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetLinkButtonTitleSmall => Styles().textStyles.getTextStyle('widget.link.button.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorSecondary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonLightTitleMedium => Styles().textStyles.getTextStyle('widget.button.light.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetButtonLightTitleMediumFat => Styles().textStyles.getTextStyle('widget.button.light.title.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetButtonLightTitleMediumThin => Styles().textStyles.getTextStyle('widget.button.light.title.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetButtonLightTitleMediumUnderline => Styles().textStyles.getTextStyle('widget.button.light.title.medium.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetColourfulButtonTitleLargeAccent => Styles().textStyles.getTextStyle('widget.colourful_button.title.large.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitleMedium => Styles().textStyles.getTextStyle('widget.colourful_button.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitleMediumAccent => Styles().textStyles.getTextStyle('widget.colourful_button.title.medium.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitle => Styles().textStyles.getTextStyle('widget.colourful_button.title') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitleAccent => Styles().textStyles.getTextStyle('widget.colourful_button.title.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitleRegular => Styles().textStyles.getTextStyle('widget.colourful_button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetColourfulButtonTitleRegularAccent => Styles().textStyles.getTextStyle('widget.colourful_button.title.regular.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetToggleButtonTitleRegularThinEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.thin.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleRegularThinDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.thin.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetToggleButtonTitleRegularEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleRegularDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetToggleButtonTitleRegularFatEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.fat.enabled') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleRegularFatDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.regular.fat.disabled') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetToggleButtonTitleSmallEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.small.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleSmallDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.small.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetToggleButtonTitleSmallThinEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.small.thin.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleSmallThinDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.small.thin.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetToggleButtonTitleTinyThinEnabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.tiny.thin.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetToggleButtonTitleTinyThinDisabled => Styles().textStyles.getTextStyle('widget.toggle_button.title.tiny.thin.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get widgetInputFieldDarkTextLarge => Styles().textStyles.getTextStyle('widget.input_field.dark.text.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetInputFieldDarkTextRegularThin => Styles().textStyles.getTextStyle('widget.input_field.dark.text.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetInputFieldDisableTextLarge => Styles().textStyles.getTextStyle('widget.input_field.disable.text.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.disabledTextColor);
    static TextStyle get widgetInputFieldEnableTextExtraLarge => Styles().textStyles.getTextStyle('widget.input_field.enable.text.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 26.0, color: AppColors.black);
    static TextStyle get widgetInputFieldTextMedium => Styles().textStyles.getTextStyle('widget.input_field.text.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textBackground);
    static TextStyle get widgetInputFieldTextRegular => Styles().textStyles.getTextStyle('widget.input_field.text.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetSheetTitleRegular => Styles().textStyles.getTextStyle('widget.sheet.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetDialogButtonClose => Styles().textStyles.getTextStyle('widget.dialog.button.close') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 50.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageMediumFat => Styles().textStyles.getTextStyle('widget.dialog.message.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageMedium => Styles().textStyles.getTextStyle('widget.dialog.message.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageMediumThin => Styles().textStyles.getTextStyle('widget.dialog.message.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageSmall => Styles().textStyles.getTextStyle('widget.dialog.message.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageRegular => Styles().textStyles.getTextStyle('widget.dialog.message.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageRegularFat => Styles().textStyles.getTextStyle('widget.dialog.message.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageRegularExtraFat => Styles().textStyles.getTextStyle('widget.dialog.message.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageLarge => Styles().textStyles.getTextStyle('widget.dialog.message.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageLargeThin => Styles().textStyles.getTextStyle('widget.dialog.message.large.thin') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageLargeFat => Styles().textStyles.getTextStyle('widget.dialog.message.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageLargeExtraFat => Styles().textStyles.getTextStyle('widget.dialog.message.large.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetDialogMessageDarkLargeFat => Styles().textStyles.getTextStyle('widget.dialog.message.dark.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.black);
    static TextStyle get widgetDialogMessageDarkLarge => Styles().textStyles.getTextStyle('widget.dialog.message.dark.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.black);
    static TextStyle get widgetDialogMessageDarkMedium => Styles().textStyles.getTextStyle('widget.dialog.message.dark.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.black);
    static TextStyle get widgetDialogMessageDarkRegular => Styles().textStyles.getTextStyle('widget.dialog.message.dark.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.black);
    static TextStyle get widgetDialogMessageDarkRegularFat => Styles().textStyles.getTextStyle('widget.dialog.message.dark.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.black);
    static TextStyle get widgetCardTitleLarge => Styles().textStyles.getTextStyle('widget.card.title.large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleMedium => Styles().textStyles.getTextStyle('widget.card.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleMediumExtraFat => Styles().textStyles.getTextStyle('widget.card.title.medium.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleMediumFat => Styles().textStyles.getTextStyle('widget.card.title.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleRegularFat => Styles().textStyles.getTextStyle('widget.card.title.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleRegularExtraFat => Styles().textStyles.getTextStyle('widget.card.title.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleSmall => Styles().textStyles.getTextStyle('widget.card.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleSmallVariant3 => Styles().textStyles.getTextStyle('widget.card.title.small.variant3') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetCardTitleSmallFat => Styles().textStyles.getTextStyle('widget.card.title.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleSmallFatVariant3 => Styles().textStyles.getTextStyle('widget.card.title.small.fat.variant3') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get widgetCardTitleTiny => Styles().textStyles.getTextStyle('widget.card.title.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardTitleTinyFat => Styles().textStyles.getTextStyle('widget.card.title.tiny.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCardDetailRegularVariant => Styles().textStyles.getTextStyle('widget.card.detail.regular_variant') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackgroundVariant);
    static TextStyle get widgetCardDetailRegular => Styles().textStyles.getTextStyle('widget.card.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailRegularFat => Styles().textStyles.getTextStyle('widget.card.detail.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailMedium => Styles().textStyles.getTextStyle('widget.card.detail.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailSmallFat => Styles().textStyles.getTextStyle('widget.card.detail.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetCardDetailSmallMedium => Styles().textStyles.getTextStyle('widget.card.detail.small.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailSmallRegular => Styles().textStyles.getTextStyle('widget.card.detail.small.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get widgetCardDetailSmall => Styles().textStyles.getTextStyle('widget.card.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailTiny => Styles().textStyles.getTextStyle('widget.card.detail.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailTinyFat => Styles().textStyles.getTextStyle('widget.card.detail.tiny.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetCardDetailTinyMediumFat => Styles().textStyles.getTextStyle('widget.card.detail.tiny.medium_fat') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetExploreCardDetailSmall => Styles().textStyles.getTextStyle('widget.explore.card.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textBackground);
    static TextStyle get widgetExploreCardDetailRegular => Styles().textStyles.getTextStyle('widget.explore.card.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get widgetExploreCardDetailRegularUnderline => Styles().textStyles.getTextStyle('widget.explore.card.detail.regular.underline') ?? TextStyle(decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetExploreCardDetailLarge => Styles().textStyles.getTextStyle('widget.explore.card.detail.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetExploreCardTitleRegular => Styles().textStyles.getTextStyle('widget.explore.card.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetExploreCardTitleRegularExtraFat => Styles().textStyles.getTextStyle('widget.explore.card.title.regular.extra_fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetExploreCardTitleLarge => Styles().textStyles.getTextStyle('widget.explore.card.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetAthleticsCardTitleLargeFat => Styles().textStyles.getTextStyle('widget.athletics.card.title.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w900);
    static TextStyle get widgetAthleticsCardTitleLarge => Styles().textStyles.getTextStyle('widget.athletics.card.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w900);
    static TextStyle get widgetAthleticsTitleLargeVariant => Styles().textStyles.getTextStyle('widget.athletics.title.large.variant') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.whiteTransparent06);
    static TextStyle get widgetAthleticsHeadingRegularVariant => Styles().textStyles.getTextStyle('widget.athletics.heading.regular.variant') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.whiteTransparent06);
    static TextStyle get widgetAthleticsHeadingRegularFatVariant => Styles().textStyles.getTextStyle('widget.athletics.heading.regular.fat.variant') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.whiteTransparent06);
    static TextStyle get widgetGroupCardPollTitle => Styles().textStyles.getTextStyle('widget.group.card.poll.title') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorPrimary, height: 1.2);
    static TextStyle get widgetGroupCardPollOption => Styles().textStyles.getTextStyle('widget.group.card.poll.option') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground, height: 1.25, fontWeight: FontWeight.w500);
    static TextStyle get widgetGroupCardPollOptionVariant => Styles().textStyles.getTextStyle('widget.group.card.poll.option_variant') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, height: 1.25, fontWeight: FontWeight.w500);
    static TextStyle get widgetGroupCardPollVotes => Styles().textStyles.getTextStyle('widget.group.card.poll.votes') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textBackground, height: 1.29, fontWeight: FontWeight.w500);
    static TextStyle get widgetGroupDropdownButtonValue => Styles().textStyles.getTextStyle('widget.group.dropdown_button.value') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupDropdownButtonHint => Styles().textStyles.getTextStyle('widget.group.dropdown_button.hint') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.mediumGray);
    static TextStyle get widgetGroupDropdownButtonItemSelected => Styles().textStyles.getTextStyle('widget.group.dropdown_button.item.selected') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupDropdownButtonItemNotSelected => Styles().textStyles.getTextStyle('widget.group.dropdown_button.item.not_selected') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupDialogAddImageMessage => Styles().textStyles.getTextStyle('widget.group.dialog.add_image.message') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get widgetGroupInputFieldLink => Styles().textStyles.getTextStyle('widget.group.input_field.link') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupInputFieldDetail => Styles().textStyles.getTextStyle('widget.group.input_field.detail') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupMembersTitle => Styles().textStyles.getTextStyle('widget.group.members.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetGroupMembersSearch => Styles().textStyles.getTextStyle('widget.group.members.search') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get widgetGroupMembersSelectedEntry => Styles().textStyles.getTextStyle('widget.group.members.selected_entry') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, decoration: TextDecoration.underline);
    static TextStyle get widgetGroupMembersDropdownItem => Styles().textStyles.getTextStyle('widget.group.members.dropdown.item') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get widgetGroupMembersDropdownItemSelected => Styles().textStyles.getTextStyle('widget.group.members.dropdown.item.selected') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, overflow: TextOverflow.ellipsis);
    static TextStyle get widgetGroupMembersDropdownHeader => Styles().textStyles.getTextStyle('widget.group.members.dropdown.header') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetWellnessRingCardHeadingLarge => Styles().textStyles.getTextStyle('widget.wellness.ring.card.heading.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetWellnessRingCardTitleLarge => Styles().textStyles.getTextStyle('widget.wellness.ring.card.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetCanvasCardTitleRegular => Styles().textStyles.getTextStyle('widget.canvas.card.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 18.0, color: AppColors.black);
    static TextStyle get widgetCanvasCardGradeScore => Styles().textStyles.getTextStyle('widget.canvas.card.grade.score') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0);
    static TextStyle get widgetSettingsDialogButtonTitleEnabled => Styles().textStyles.getTextStyle('widget.settings.dialog.button.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.white);
    static TextStyle get widgetSettingsDialogButtonTitleDisabled => Styles().textStyles.getTextStyle('widget.settings.dialog.button.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get widgetChecklistContentStepTitle => Styles().textStyles.getTextStyle('widget.checklist.content.step.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetChecklistContentStepTitleDisplay => Styles().textStyles.getTextStyle('widget.checklist.content.step.title.display') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetChecklistContentPageTitle => Styles().textStyles.getTextStyle('widget.checklist.content.page.title') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.white);
    static TextStyle get widgetChecklistContentPageTitleDisplay => Styles().textStyles.getTextStyle('widget.checklist.content.page.title.display') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0, color: AppColors.white);
    static TextStyle get widgetChecklistContentProgressTitleCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.progress.title.completed') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 15.0, color: AppColors.greenAccent, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentProgressTitleNotCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.progress.title.not_completed') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 15.0, color: AppColors.white, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentProgressTitleCurrentStep => Styles().textStyles.getTextStyle('widget.checklist.content.progress.title.current_step') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 15.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentTabTitleCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.tab.title.completed') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.greenAccent, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentTabTitleNotCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.tab.title.not_completed') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentTabTitleCurrentTabCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.tab.title.current_tab.completed') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.greenAccent, decoration: TextDecoration.underline);
    static TextStyle get widgetChecklistContentTabTitleCurrentTabNotCompleted => Styles().textStyles.getTextStyle('widget.checklist.content.tab.title.current_tab.not_completed') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline);
    static TextStyle get widgetHomeToutButtonUnderlineTitle => Styles().textStyles.getTextStyle('widget.home_tout.button.underline.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.textColorPrimary);
    static TextStyle get widgetHomeLinkButtonRegularAccentUnderline => Styles().textStyles.getTextStyle('widget.home.link_button.regular.accent.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.accentColor3, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.accentColor3);
    static TextStyle get widgetStudentCoursesTitleExtraLarge => Styles().textStyles.getTextStyle('widget.student_courses.title.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w900, letterSpacing: 1.0);
    static TextStyle get widgetTabBarTitleSelected => Styles().textStyles.getTextStyle('widget.tab_bar.title.selected') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.fillColorSecondary);
    static TextStyle get widgetTabBarTitleNotSelected => Styles().textStyles.getTextStyle('widget.tab_bar.title.not_selected') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.mediumGray);
    static TextStyle get panelEventScheduleTitle => Styles().textStyles.getTextStyle('panel.event_schedule.title') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelEventScheduleCategory => Styles().textStyles.getTextStyle('panel.event_schedule.category') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelEventScheduleMapDescription => Styles().textStyles.getTextStyle('panel.event_schedule.map.description') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.blackTransparent038);
    static TextStyle get panelEventScheduleSearchEdit => Styles().textStyles.getTextStyle('panel.event_schedule.search.edit') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelGroupTitleLage => Styles().textStyles.getTextStyle('panel.group.title.lage') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 32.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelGroupButtonLeaveTitle => Styles().textStyles.getTextStyle('panel.group.button.leave.title') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.5, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelGroupButtonShowOlderTitle => Styles().textStyles.getTextStyle('panel.group.button.show_older.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline);
    static TextStyle get panelGroupDetailTagHeading => Styles().textStyles.getTextStyle('panel.group.detail.tag.heading') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textSurface);
    static TextStyle get panelGroupDetailTagTitle => Styles().textStyles.getTextStyle('panel.group.detail.tag.title') ?? TextStyle(fontFamily: AppFontFamilies.regular);
    static TextStyle get panelGroupDetailFat => Styles().textStyles.getTextStyle('panel.group.detail.fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textVariant);
    static TextStyle get panelGroupDetailRegular => Styles().textStyles.getTextStyle('panel.group.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelGroupDetailSmall => Styles().textStyles.getTextStyle('panel.group.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get panelGroupMemberNotificationsErrorMsg => Styles().textStyles.getTextStyle('panel.group_member_notifications.error.msg') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 22.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelGroupMemberNotificationsToggleButtonTitleFatEnabled => Styles().textStyles.getTextStyle('panel.group_member_notifications.toggle_button.title.fat.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelGroupMemberNotificationsToggleButtonTitleFatDisabled => Styles().textStyles.getTextStyle('panel.group_member_notifications.toggle_button.title.fat.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelGroupMemberNotificationsToggleButtonTitleSmallEnabled => Styles().textStyles.getTextStyle('panel.group_member_notifications.toggle_button.title.small.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelGroupMemberNotificationsToggleButtonTitleSmallDisabled => Styles().textStyles.getTextStyle('panel.group_member_notifications.toggle_button.title.small.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelGroupPostCreateHeadingRegular => Styles().textStyles.getTextStyle('panel.group_post_create.heading.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015, letterSpacing: 1.0);
    static TextStyle get panelWellnessRingSelectPredefinedMessageRegular => Styles().textStyles.getTextStyle('panel.wellness.ring.select_predefined.message.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get panelWellnessRingSelectPredefinedButtonLabelRegular => Styles().textStyles.getTextStyle('panel.wellness.ring.select_predefined.button.label.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.black);
    static TextStyle get panelWellnessRingSelectPredefinedButtonDescriptionRegular => Styles().textStyles.getTextStyle('panel.wellness.ring.select_predefined.button.description.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.black);
    static TextStyle get panelWellnessRingHomeWidgetButtonTitleEnabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home_widget.button.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.black);
    static TextStyle get panelWellnessRingHomeWidgetButtonTitleDisabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home_widget.button.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorDisabled);
    static TextStyle get panelWellnessRingHomeDetailMessage => Styles().textStyles.getTextStyle('panel.wellness.ring.home.detail.message') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelWellnessRingHomeDetailMessageFat => Styles().textStyles.getTextStyle('panel.wellness.ring.home.detail.message.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelWellnessRingHomePopupHeading => Styles().textStyles.getTextStyle('panel.wellness.ring.home.popup.heading') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelWellnessRingHomeButtonCreateRingTitleEnabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home.button.create_ring.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.black);
    static TextStyle get panelWellnessRingHomeButtonCreateRingTitleDisabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home.button.create_ring.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorDisabled);
    static TextStyle get panelWellnessRingHomeButtonCreateRingDescriptionEnabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home.button.create_ring.description.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.black);
    static TextStyle get panelWellnessRingHomeButtonCreateRingDescriptionDisabled => Styles().textStyles.getTextStyle('panel.wellness.ring.home.button.create_ring.description.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textColorDisabled);
    static TextStyle get panelWellnessTodoContentLargeTitle => Styles().textStyles.getTextStyle('panel.wellness.todo.content.large_title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelWellnessTodoCardTitle => Styles().textStyles.getTextStyle('panel.wellness.todo.card.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textColorPrimary);
    static TextStyle get panelWellnessTodoDialogHeadingRegular => Styles().textStyles.getTextStyle('panel.wellness.todo.dialog.heading.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelWellnessTodoDialogHeadingLarge => Styles().textStyles.getTextStyle('panel.wellness.todo.dialog.heading.large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelWellnessTodoCategoryCardTitleRegular => Styles().textStyles.getTextStyle('panel.wellness.todo.category.card.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorPrimary);
    static TextStyle get panelWellnessTodoCategoryEmptyMsg => Styles().textStyles.getTextStyle('panel.wellness.todo.category.empty.msg') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get panelWellnessTodoItemDetailTitle => Styles().textStyles.getTextStyle('panel.wellness.todo.item_detail.title') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelWellnessTodoItemDetailItem => Styles().textStyles.getTextStyle('panel.wellness.todo.item_detail.item') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelWellnessTodoItemDetailEmpty => Styles().textStyles.getTextStyle('panel.wellness.todo.item_detail.empty') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelWellnessTodoItemDetailWorkDate => Styles().textStyles.getTextStyle('panel.wellness.todo.item_detail.work_date') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 11.0, color: AppColors.black);
    static TextStyle get panelWellnessTipsButtonTitleSmall => Styles().textStyles.getTextStyle('panel.wellness.tips.button.title.small') ?? TextStyle(fontSize: 14.0);
    static TextStyle get panelWellnessResourceButtonTitleLarge => Styles().textStyles.getTextStyle('panel.wellness.resource.button.title.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelWellnessResourceButtonTitleRegular => Styles().textStyles.getTextStyle('panel.wellness.resource.button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline);
    static TextStyle get panelWellnessSectionsHealthScreenerDescription => Styles().textStyles.getTextStyle('panel.wellness.sections.health_screener.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.surface);
    static TextStyle get panelAthleticsHomeHeadingRegular => Styles().textStyles.getTextStyle('panel.athletics.home.heading.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, fontWeight: FontWeight.w900, letterSpacing: 1.0);
    static TextStyle get panelAthleticsHomeTitleLarge => Styles().textStyles.getTextStyle('panel.athletics.home.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w900);
    static TextStyle get panelAthleticsHomeDetailMedium => Styles().textStyles.getTextStyle('panel.athletics.home.detail.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelAthleticsHomeButtonUnderline => Styles().textStyles.getTextStyle('panel.athletics.home.button.underline') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 16.0, color: AppColors.white, letterSpacing: 1.0, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelAthleticsCoachDetailTitleExtraLarge => Styles().textStyles.getTextStyle('panel.athletics.coach_detail.title.extra_large') ?? TextStyle(fontSize: 24.0);
    static TextStyle get panelAthleticsCoachDetailTitleRegularAccent => Styles().textStyles.getTextStyle('panel.athletics.coach_detail.title.regular.accent') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.surfaceAccent);
    static TextStyle get panelMtdBusHeadingTitle => Styles().textStyles.getTextStyle('panel.mtd_bus.heading.title') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.transparentWalletColor);
    static TextStyle get panelMtdBusBussNumberLabel => Styles().textStyles.getTextStyle('panel.mtd_bus.buss_number.label') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.white);
    static TextStyle get panelMtdBusDescriptionLabel => Styles().textStyles.getTextStyle('panel.mtd_bus.description.label') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get panelMtdBusRole => Styles().textStyles.getTextStyle('panel.mtd_bus.role') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 36.0, color: AppColors.white);
    static TextStyle get panelMtdBusClockTime => Styles().textStyles.getTextStyle('panel.mtd_bus.clock.time') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 48.0, color: AppColors.white);
    static TextStyle get panelIcardContentFaqsMobileCardUsageQuestion => Styles().textStyles.getTextStyle('panel.icard.content.faqs.mobile_card.usage.question') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardCloseButton => Styles().textStyles.getTextStyle('panel.id_card.close_button') ?? TextStyle(fontFamily: AppFontFamilies.light, fontSize: 48.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardHeadingTitle => Styles().textStyles.getTextStyle('panel.id_card.heading.title') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelIdCardDetailTitleExtraLarge => Styles().textStyles.getTextStyle('panel.id_card.detail.title.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 28.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailTitleLarge => Styles().textStyles.getTextStyle('panel.id_card.detail.title.large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailTitleRegular => Styles().textStyles.getTextStyle('panel.id_card.detail.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailTitleMedium => Styles().textStyles.getTextStyle('panel.id_card.detail.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailTitleSmall => Styles().textStyles.getTextStyle('panel.id_card.detail.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailTitleTiny => Styles().textStyles.getTextStyle('panel.id_card.detail.title.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelIdCardDetailDescriptionItalic => Styles().textStyles.getTextStyle('panel.id_card.detail.description.italic') ?? TextStyle(fontFamily: AppFontFamilies.mediumItalic, fontSize: 12.0, color: AppColors.mediumGray);
    static TextStyle get panelIdCardDetailDescriptionMediumUnderline => Styles().textStyles.getTextStyle('panel.id_card.detail.description.medium.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.mediumGray, decoration: TextDecoration.underline, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelSettingsHeadingTitleLarge => Styles().textStyles.getTextStyle('panel.settings.heading.title.large') ?? TextStyle(fontFamily: AppFontFamilies.semiBold, fontSize: 24.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsDetailTitleRegular => Styles().textStyles.getTextStyle('panel.settings.detail.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelSettingsDetailTitleMedium => Styles().textStyles.getTextStyle('panel.settings.detail.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get panelSettingsDetailTitleSmall => Styles().textStyles.getTextStyle('panel.settings.detail.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.white);
    static TextStyle get panelSettingsDetailTitleSmallFat => Styles().textStyles.getTextStyle('panel.settings.detail.title.small.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textBackground);
    static TextStyle get panelSettingsErrorText => Styles().textStyles.getTextStyle('panel.settings.error.text') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.redTransparent01);
    static TextStyle get panelSettingsErrorTextSmall => Styles().textStyles.getTextStyle('panel.settings.error.text.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.redTransparent01);
    static TextStyle get panelSettingsToggleButtonTitleFatEnabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.fat.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsToggleButtonTitleFatDisabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.fat.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelSettingsToggleButtonTitleRegularEnabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.regular.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsToggleButtonTitleRegularDisabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.regular.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelSettingsToggleButtonTitleSmallEnabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.small.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsToggleButtonTitleSmallDisabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.small.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015, letterSpacing: 1.0);
    static TextStyle get panelSettingsToggleButtonTitleSmallVariantEnabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.small.variant.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsToggleButtonTitleSmallVariantDisabled => Styles().textStyles.getTextStyle('panel.settings.toggle_button.title.small.variant.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelSettingsButtonTitleMedium => Styles().textStyles.getTextStyle('panel.settings.button.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelSettingsFoodFilterTitle => Styles().textStyles.getTextStyle('panel.settings.food_filter.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textColorPrimary, letterSpacing: 1.0);
    static TextStyle get panelSettingsLinkAccountTypeTitle => Styles().textStyles.getTextStyle('panel.settings.link_account.type.title') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsLocationToggleButtonAdditionalInfoEnabled => Styles().textStyles.getTextStyle('panel.settings.location.toggle_button.additional_info.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsLocationToggleButtonAdditionalInfoDisabled => Styles().textStyles.getTextStyle('panel.settings.location.toggle_button.additional_info.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurfaceTransparent15);
    static TextStyle get panelSettingsLoginValidationText => Styles().textStyles.getTextStyle('panel.settings.login.validation.text') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelSettingsLoginTitleLarge => Styles().textStyles.getTextStyle('panel.settings.login.title.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsPrivacyCenterTitleMediumFat => Styles().textStyles.getTextStyle('panel.settings.privacy_center.title.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsPrivacyCenterTitleRegular => Styles().textStyles.getTextStyle('panel.settings.privacy_center.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsPrivacyCenterButtonUnderline => Styles().textStyles.getTextStyle('panel.settings.privacy_center.button.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelSettingsPrivacyCenterMessageTiny => Styles().textStyles.getTextStyle('panel.settings.privacy_center.message.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsPrivacyPanelUpdateMessage => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.update.message') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSettingsPrivacyPanelUpdateMessageFat => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.update.message.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSettingsPrivacyPanelPrivacyLabelMedium => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.label.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsPrivacyPanelPrivacyLabelRegular => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.label.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurface);
    static TextStyle get panelSettingsPrivacyPanelPrivacyDescriptionLarge => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.description.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsPrivacyPanelPrivacyEntryTitleEnabled => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.entry.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsPrivacyPanelPrivacyEntryTitleDisabled => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.entry.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 16.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelSettingsPrivacyPanelPrivacyEntryInfoEnabled => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.entry.info.enabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelSettingsPrivacyPanelPrivacyEntryInfoDisabled => Styles().textStyles.getTextStyle('panel.settings.privacy_panel.privacy.entry.info.disabled') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.fillColorPrimaryTransparent015);
    static TextStyle get panelSettingsVideoTutorialCaptionDetail => Styles().textStyles.getTextStyle('panel.settings.video_tutorial.caption.detail') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get panelSettingsVideoTutorialMsg => Styles().textStyles.getTextStyle('panel.settings.video_tutorial.msg') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get panelSettingsVideoTutorialButton => Styles().textStyles.getTextStyle('panel.settings.video_tutorial.button') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.white);
    static TextStyle get panelPollCreatePollOptionTitle => Styles().textStyles.getTextStyle('panel.poll.create.poll_option.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.white, letterSpacing: 0.86);
    static TextStyle get panelPollCreatePollOptionCounter => Styles().textStyles.getTextStyle('panel.poll.create.poll_option.counter') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.mediumGray);
    static TextStyle get panelPollCreateStadiumGeofenceDropdownTitle => Styles().textStyles.getTextStyle('panel.poll.create.stadium.geofence.dropdown.title') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.mediumGray);
    static TextStyle get panelPollBubblePinButtonInfo => Styles().textStyles.getTextStyle('panel.poll.bubble.pin.button.info') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 20.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelPollBubblePinFieldText => Styles().textStyles.getTextStyle('panel.poll.bubble.pin.field.text') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelPollBubblePromptDetailMediumAccent => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.medium.accent') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.surfaceAccent, fontWeight: FontWeight.w500);
    static TextStyle get panelPollBubblePromptDetailSmall => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.white, fontWeight: FontWeight.w600);
    static TextStyle get panelPollBubblePromptDetailSmallThin => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.small.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.white, fontWeight: FontWeight.w200);
    static TextStyle get panelPollBubblePromptDetailSmallRegular => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.small.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.white, fontWeight: FontWeight.w500);
    static TextStyle get panelPollBubblePromptDetailRegularThin => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, fontWeight: FontWeight.w300);
    static TextStyle get panelPollBubblePromptDetailRegular => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, fontWeight: FontWeight.w500);
    static TextStyle get panelPollBubblePromptDetailLargeFat => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.detail.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.white, fontWeight: FontWeight.w900);
    static TextStyle get panelPollBubblePromptVotingResult => Styles().textStyles.getTextStyle('panel.poll.bubble.prompt.voting.result') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 15.0, color: AppColors.white);
    static TextStyle get panelPollsHomeCheck => Styles().textStyles.getTextStyle('panel.polls.home.check') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textBackground, height: 1.25, fontWeight: FontWeight.w500);
    static TextStyle get panelPollsHomeCheckAccent => Styles().textStyles.getTextStyle('panel.polls.home.check.accent') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white, height: 1.25, fontWeight: FontWeight.w500);
    static TextStyle get panelPollsHomeDescription => Styles().textStyles.getTextStyle('panel.polls.home.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get panelPollsHomeCardPercentageTitle => Styles().textStyles.getTextStyle('panel.polls.home.card.percentage.title') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textBackground, fontWeight: FontWeight.w500, height: 1.29);
    static TextStyle get panelPollsHomeCardButtonCreateTitle => Styles().textStyles.getTextStyle('panel.polls.home.card.button.create.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1.38);
    static TextStyle get panelOnboarding2HeadingTitle => Styles().textStyles.getTextStyle('panel.onboarding2.heading.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 32.0, color: AppColors.white, letterSpacing: 1.0);
    static TextStyle get panelOnboarding2ImproveHeadingTitle => Styles().textStyles.getTextStyle('panel.onboarding2.improve.heading.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.fillColorPrimary, height: 1.2);
    static TextStyle get panelOnboarding2LoginEmailHeadingTitle => Styles().textStyles.getTextStyle('panel.onboarding2.login_email.heading.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelOnboarding2GetStartedDescription => Styles().textStyles.getTextStyle('panel.onboarding2.get_started.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w500);
    static TextStyle get panelOnboarding2RolesDescription => Styles().textStyles.getTextStyle('panel.onboarding2.roles.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1.5);
    static TextStyle get panelOnboarding2ExploreCampusTitle => Styles().textStyles.getTextStyle('panel.onboarding2.explore_campus.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.fillColorPrimary, height: 1.4);
    static TextStyle get panelOnboarding2PrivacyStatementTitleFat => Styles().textStyles.getTextStyle('panel.onboarding2.privacy_statement.title.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 32.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w700, height: 1.25);
    static TextStyle get panelOnboarding2PrivacyStatementTitleRegular => Styles().textStyles.getTextStyle('panel.onboarding2.privacy_statement.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 32.0, color: AppColors.fillColorPrimary, fontWeight: FontWeight.w400);
    static TextStyle get panelOnboarding2PrivacyStatementDescriptionRegular => Styles().textStyles.getTextStyle('panel.onboarding2.privacy_statement.description.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1.4);
    static TextStyle get panelOnboarding2PrivacyBadge => Styles().textStyles.getTextStyle('panel.onboarding2.privacy.badge') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.white);
    static TextStyle get panelOnboarding2VideoTutorialCcEnabled => Styles().textStyles.getTextStyle('panel.onboarding2.video_tutorial.cc.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.white);
    static TextStyle get panelOnboarding2VideoTutorialCcDisabled => Styles().textStyles.getTextStyle('panel.onboarding2.video_tutorial.cc.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.disabledTextColorTwo);
    static TextStyle get panelOnboarding2VideoTutorialCaptionText => Styles().textStyles.getTextStyle('panel.onboarding2.video_tutorial.caption.text') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.white);
    static TextStyle get panelOnboarding2VideoTutorialMessageEmpty => Styles().textStyles.getTextStyle('panel.onboarding2.video_tutorial.message.empty') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.white);
    static TextStyle get panelSkillsSelfEvaluationGetStartedHeader => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.get_started.header') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 28.0, color: AppColors.surface);
    static TextStyle get panelSkillsSelfEvaluationGetStartedTimeDescription => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.get_started.time.description') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelSkillsSelfEvaluationResultsHeader => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.results.header') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 36.0, color: AppColors.surface);
    static TextStyle get panelSkillsSelfEvaluationResultsTableHeader => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.results.table.header') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.surface);
    static TextStyle get panelSkillsSelfEvaluationResultsTableHeaderDark => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.results.table.header.dark') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationResultsScoreCurrent => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.results.score.current') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.fillColorSecondary);
    static TextStyle get panelSkillsSelfEvaluationResultsScorePast => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.results.score.past') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 36.0, color: AppColors.mediumGray);
    static TextStyle get panelSkillsSelfEvaluationHeaderDescription => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.header.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.surface);
    static TextStyle get panelSkillsSelfEvaluationAuthDialogText => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.auth_dialog.text') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationAuthDialogLink => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.auth_dialog.link') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelSkillsSelfEvaluationContentTitle => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationContentTitleLarge => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.title.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationContentBody => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.body') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationContentBodySmall => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.body.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelSkillsSelfEvaluationContentLink => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.link') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelSkillsSelfEvaluationContentLinkSmall => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.link.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimaryVariant, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelSkillsSelfEvaluationContentLinkFat => Styles().textStyles.getTextStyle('panel.skills_self_evaluation.content.link.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelEssentialSkillsCoachGetStartedHeader => Styles().textStyles.getTextStyle('panel.essential_skills_coach.get_started.header') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 28.0, color: AppColors.surface);
    static TextStyle get panelEssentialSkillsCoachHeaderDescription => Styles().textStyles.getTextStyle('panel.essential_skills_coach.header.description') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.surface);
    static TextStyle get panelEssentialSkillsCoachAuthDialogText => Styles().textStyles.getTextStyle('panel.essential_skills_coach.auth_dialog.text') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelEssentialSkillsCoachAuthDialogLink => Styles().textStyles.getTextStyle('panel.essential_skills_coach.auth_dialog.link') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant, decoration: TextDecoration.underline, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get panelEssentialSkillsCoachContentTitle => Styles().textStyles.getTextStyle('panel.essential_skills_coach.content.title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelEssentialSkillsCoachResultsTableHeader => Styles().textStyles.getTextStyle('panel.essential_skills_coach.results.table.header') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.fillColorPrimary);
    static TextStyle get panelWellnessAppointmentsButtonTitleUnderline => Styles().textStyles.getTextStyle('panel.wellness_appointments.button.title.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorPrimary);
    static TextStyle get panelWellnessAppointmentsTitleLarge => Styles().textStyles.getTextStyle('panel.wellness_appointments.title.large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 22.0, color: AppColors.blackTransparent06);
    static TextStyle get panelAppointmentDetailTitleLarge => Styles().textStyles.getTextStyle('panel.appointment_detail.title.large') ?? TextStyle(fontFamily: AppFontFamilies.extraBold, fontSize: 22.0, color: AppColors.accentColor1);
    static TextStyle get panelSettingsSectionContentHtmTitleRegular => Styles().textStyles.getTextStyle('panel.settings.section_content.htm.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regularItalic, fontSize: 16.0, color: AppColors.textBackground);
    static TextStyle get panelResearchProjectProfileDetailRegular => Styles().textStyles.getTextStyle('panel.research_project.profile.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelResearchProjectProfileDetailSmall => Styles().textStyles.getTextStyle('panel.research_project.profile.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelCreateEventTitleSmall => Styles().textStyles.getTextStyle('panel.create_event.title.small') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, letterSpacing: 1.0);
    static TextStyle get panelCreateEventDropdownButtonTitleRegular => Styles().textStyles.getTextStyle('panel.create_event.dropdown_button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.mediumGray);
    static TextStyle get panelEventAttendanceDetailDescriptionItalic => Styles().textStyles.getTextStyle('panel.event.attendance.detail.description.italic') ?? TextStyle(fontFamily: AppFontFamilies.regularItalic, fontSize: 14.0, color: AppColors.textSurface);
    static TextStyle get panelLaundryRoomDetailMapButtonTitleRegularUnderline => Styles().textStyles.getTextStyle('panel.laundry_room_detail.map_button.title.regular.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.white, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.17, decorationColor: AppColors.white);
    static TextStyle get panelCanvasTextMedium => Styles().textStyles.getTextStyle('panel.canvas.text.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelCanvasTextMediumFat => Styles().textStyles.getTextStyle('panel.canvas.text.medium.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelCanvasTextSmall => Styles().textStyles.getTextStyle('panel.canvas.text.small') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimaryVariant);
    static TextStyle get panelCanvasTextSmallAccent => Styles().textStyles.getTextStyle('panel.canvas.text.small.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.accentColor1);
    static TextStyle get panelCanvasDetailLarge => Styles().textStyles.getTextStyle('panel.canvas.detail.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 22.0, color: AppColors.fillColorSecondaryTransparent05);
    static TextStyle get panelCanvasItemLargeFat => Styles().textStyles.getTextStyle('panel.canvas.item.large.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelCanvasItemRegular => Styles().textStyles.getTextStyle('panel.canvas.item.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textSurfaceAccent);
    static TextStyle get panelCanvasItemRegularFat => Styles().textStyles.getTextStyle('panel.canvas.item.regular.fat') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textSurfaceAccent);
    static TextStyle get appTitle => Styles().textStyles.getTextStyle('app_title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 42.0, color: AppColors.textLight);
    static TextStyle get headerBarAccent => Styles().textStyles.getTextStyle('header_bar.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingExtraLargeBold => Styles().textStyles.getTextStyle('widget.heading.extra_large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 30.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingLargeBold => Styles().textStyles.getTextStyle('widget.heading.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingRegularBold => Styles().textStyles.getTextStyle('widget.heading.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetMessageExtraLargeBold => Styles().textStyles.getTextStyle('widget.message.extra_large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageLargeBold => Styles().textStyles.getTextStyle('widget.message.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageLargeDarkBold => Styles().textStyles.getTextStyle('widget.message.large.dark.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textDark, height: 1);
    static TextStyle get widgetMessageRegularPrimaryBold => Styles().textStyles.getTextStyle('widget.message.regular.primary.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetMessageRegularPrimary => Styles().textStyles.getTextStyle('widget.message.regular.primary') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetMessageLightBoldPrimary => Styles().textStyles.getTextStyle('widget.message.light.bold.primary') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textMedium, height: 1);
    static TextStyle get widgetMessageRegularBold => Styles().textStyles.getTextStyle('widget.message.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageRegularBoldAccent => Styles().textStyles.getTextStyle('widget.message.regular.bold.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark, height: 1);
    static TextStyle get widgetMessageSmallPrimaryBold => Styles().textStyles.getTextStyle('widget.message.small.primary.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetTitleLargeBold => Styles().textStyles.getTextStyle('widget.title.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleMediumBold => Styles().textStyles.getTextStyle('widget.title.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleSmallBold => Styles().textStyles.getTextStyle('widget.title.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleAccentExtraLarge => Styles().textStyles.getTextStyle('widget.title.accent.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentLarge => Styles().textStyles.getTextStyle('widget.title.accent.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentLargeBold => Styles().textStyles.getTextStyle('widget.title.accent.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentMedium => Styles().textStyles.getTextStyle('widget.title.accent.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentMediumBold => Styles().textStyles.getTextStyle('widget.title.accent.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentRegular => Styles().textStyles.getTextStyle('widget.title.accent.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentSmallBold => Styles().textStyles.getTextStyle('widget.title.accent.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentTiny => Styles().textStyles.getTextStyle('widget.title.accent.tiny') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textAccent);
    static TextStyle get widgetDetailLargeBold => Styles().textStyles.getTextStyle('widget.detail.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textDark);
    static TextStyle get widgetDetailRegularBold => Styles().textStyles.getTextStyle('widget.detail.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetDescriptionRegularBold => Styles().textStyles.getTextStyle('widget.description.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmallBold => Styles().textStyles.getTextStyle('widget.description.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmallBoldSemiExpanded => Styles().textStyles.getTextStyle('widget.description.small.bold.semi_expanded') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary, letterSpacing: 0.86);
    static TextStyle get widgetSuccessRegular => Styles().textStyles.getTextStyle('widget.success.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.success);
    static TextStyle get widgetSuccessRegularBold => Styles().textStyles.getTextStyle('widget.success.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.success);
    static TextStyle get widgetErrorRegularBold => Styles().textStyles.getTextStyle('widget.error.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.alert);
    static TextStyle get widgetItemMediumBold => Styles().textStyles.getTextStyle('widget.item.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textDark);
    static TextStyle get widgetItemRegularBold => Styles().textStyles.getTextStyle('widget.item.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetItemSmallBold => Styles().textStyles.getTextStyle('widget.item.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetItemTinyBold => Styles().textStyles.getTextStyle('widget.item.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetInfoRegularBold => Styles().textStyles.getTextStyle('widget.info.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetInfoSmallBold => Styles().textStyles.getTextStyle('widget.info.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetButtonTitleMediumBold => Styles().textStyles.getTextStyle('widget.button.title.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleMediumBoldUnderline => Styles().textStyles.getTextStyle('widget.button.title.medium.bold.underline') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumLightUnderline => Styles().textStyles.getTextStyle('widget.button.title.medium.light.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textLight, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.textLight);
    static TextStyle get widgetColourfulButtonTitleTitleRegular => Styles().textStyles.getTextStyle('widget.colourful_button.title.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetColourfulButtonTitleTitleAccent => Styles().textStyles.getTextStyle('widget.colourful_button.title.title.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageRegularBold => Styles().textStyles.getTextStyle('widget.dialog.message.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageLargeBold => Styles().textStyles.getTextStyle('widget.dialog.message.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageDarkLargeBold => Styles().textStyles.getTextStyle('widget.dialog.message.dark.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textDark);
    static TextStyle get widgetCardTitleRegularBold => Styles().textStyles.getTextStyle('widget.card.title.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleSmallBold => Styles().textStyles.getTextStyle('widget.card.title.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleTinyBold => Styles().textStyles.getTextStyle('widget.card.title.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardDetailRegularBold => Styles().textStyles.getTextStyle('widget.card.detail.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailSmallVariant => Styles().textStyles.getTextStyle('widget.card.detail.small_variant') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailSmallVariant2 => Styles().textStyles.getTextStyle('widget.card.detail.small_variant2') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailTinyBold => Styles().textStyles.getTextStyle('widget.card.detail.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailTinyVariant2 => Styles().textStyles.getTextStyle('widget.card.detail.tiny_variant2') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textDark);
}

class AppImages {
    static UiImage get campusTools => Styles().images.getImage('campus-tools') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get calendar => Styles().images.getImage('calendar') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-calendar.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get news => Styles().images.getImage('news') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf0a1","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":17}));
    static UiImage get polls => Styles().images.getImage('polls') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-quick-polls.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get dining => Styles().images.getImage('dining') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2e7","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get personCircle => Styles().images.getImage('person-circle') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-member.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get reminder => Styles().images.getImage('reminder') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-reminder.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get courses => Styles().images.getImage('courses') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get checklist => Styles().images.getImage('checklist') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf03a","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20,"todo":"same as todo"}));
    static UiImage get laundry => Styles().images.getImage('laundry') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf898","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get transit => Styles().images.getImage('transit') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/location.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get inbox => Styles().images.getImage('inbox') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-reminder.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get guide => Styles().images.getImage('guide') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf6d4","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":19}));
    static UiImage get event => Styles().images.getImage('event') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf073","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":18}));
    static UiImage get events => Styles().images.getImage('events') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-calendar.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get athletics => Styles().images.getImage('athletics') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-athletics-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size"}));
    static UiImage get groups => Styles().images.getImage('groups') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-groups.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get appointments => Styles().images.getImage('appointments') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get recent => Styles().images.getImage('recent') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get video => Styles().images.getImage('video') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get todo => Styles().images.getImage('todo') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf03a","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get health => Styles().images.getImage('health') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get research => Styles().images.getImage('research') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get resources => Styles().images.getImage('resources') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get highlights => Styles().images.getImage('highlights') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/campus-tools.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"pick better icon"}));
    static UiImage get wallet => Styles().images.getImage('wallet') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2bb","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get help => Styles().images.getImage('help') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-info-orange.png","type":"flutter.asset","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get radio => Styles().images.getImage('radio') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf58f","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get info => Styles().images.getImage('info') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-info-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get edit => Styles().images.getImage('edit') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf044","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get trash => Styles().images.getImage('trash') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2ed","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get feedback => Styles().images.getImage('feedback') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-feedback.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get posts => Styles().images.getImage('posts') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf3e5","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get reply => Styles().images.getImage('reply') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf3e5","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get location => Styles().images.getImage('location') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/location.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size"}));
    static UiImage get time => Styles().images.getImage('time') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-time.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get clear => Styles().images.getImage('clear') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf057","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":24}));
    static UiImage get laptop => Styles().images.getImage('laptop') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/laptop.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size issue?"}));
    static UiImage get share => Styles().images.getImage('share') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xe09a","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20,"todo":"remove if not used"}));
    static UiImage get privacy => Styles().images.getImage('privacy') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-privacy.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get search => Styles().images.getImage('search') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-search.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get paste => Styles().images.getImage('paste') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-paste.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get more => Styles().images.getImage('more') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-groups-options-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size"}));
    static UiImage get cost => Styles().images.getImage('cost') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-cost.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get plus => Styles().images.getImage('plus') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icons-control-add-blue.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get plusCircle => Styles().images.getImage('plus-circle') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-create-event.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get minusCircle => Styles().images.getImage('minus-circle') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-decrease.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get bug => Styles().images.getImage('bug') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-bug.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get sound => Styles().images.getImage('sound') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-listen.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size issue"}));
    static UiImage get playCircle => Styles().images.getImage('play-circle') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-watch.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get compass => Styles().images.getImage('compass') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-explore.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get eye => Styles().images.getImage('eye') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/view-only-blue.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get football => Styles().images.getImage('football') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/posession.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size, color"}));
    static UiImage get bluetooth => Styles().images.getImage('bluetooth') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/bluetooth.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"color issue, size issue"}));
    static UiImage get academics0 => Styles().images.getImage('academics-0') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-academics-selected.png","type":"flutter.asset","size":18,"todo":"color issue"}));
    static UiImage get academics => Styles().images.getImage('academics') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-academics-universal.png","type":"flutter.asset","size":18,"color":"fillColorSecondary"}));
    static UiImage get pauseCircleLarge => Styles().images.getImage('pause-circle-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf28b","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":34}));
    static UiImage get playCircleLarge => Styles().images.getImage('play-circle-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf144","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":34}));
    static UiImage get wellness0 => Styles().images.getImage('wellness-0') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-wellness-selected.png","type":"flutter.asset","color":"fillColorSecondary","size":28,"todo":"size issue"}));
    static UiImage get wellness => Styles().images.getImage('wellness') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-wellness-universal.png","type":"flutter.asset","color":"fillColorSecondary","size":24}));
    static UiImage get home => Styles().images.getImage('home') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-home-selected.png","type":"flutter.asset","size":20,"todo":"size issue, color issue, unused?"}));
    static UiImage get warning => Styles().images.getImage('warning') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/warning-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":24,"todo":"wrong size"}));
    static UiImage get userCheck => Styles().images.getImage('user-check') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/user-check.png","type":"flutter.asset","color":"fillColorSecondary","size":20,"todo":"wrong size"}));
    static UiImage get related => Styles().images.getImage('related') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-related.png","type":"flutter.asset","color":"fillColorSecondary","size":20,"todo":"wrong size"}));
    static UiImage get history => Styles().images.getImage('history') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/blue.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"size, color"}));
    static UiImage get chart => Styles().images.getImage('chart') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-live-stats.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"wrong size"}));
    static UiImage get browse => Styles().images.getImage('browse') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf0c9","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":19}));
    static UiImage get close => Styles().images.getImage('close') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf057","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":24,"todo":"same as clear"}));
    static UiImage get settings => Styles().images.getImage('settings') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-settings.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"wrong size"}));
    static UiImage get externalLink => Styles().images.getImage('external-link') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf08e","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":15}));
    static UiImage get web => Styles().images.getImage('web') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf08e","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":15,"todo":"same as external-link"}));
    static UiImage get qr => Styles().images.getImage('qr') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf1e0","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get notification => Styles().images.getImage('notification') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/notifications-blue.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"color issue, size issue"}));
    static UiImage get phone => Styles().images.getImage('phone') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-phone.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"size"}));
    static UiImage get mail => Styles().images.getImage('mail') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-mail.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"size"}));
    static UiImage get person => Styles().images.getImage('person') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/identiy-blue.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"size"}));
    static UiImage get organization => Styles().images.getImage('organization') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-organization.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get key => Styles().images.getImage('key') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-login-grey.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"size"}));
    static UiImage get check => Styles().images.getImage('check') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-check-simple.png","type":"flutter.asset","color":"fillColorSecondary","size":12,"todo":"size issue"}));
    static UiImage get filters => Styles().images.getImage('filters') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-filters.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size, color"}));
    static UiImage get sort => Styles().images.getImage('sort') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-sort.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size, color"}));
    static UiImage get recurrence => Styles().images.getImage('recurrence') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-recurring-event.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get attendance => Styles().images.getImage('attendance') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf7f3","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get report => Styles().images.getImage('report') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf06a","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":20}));
    static UiImage get clock => Styles().images.getImage('clock') ?? UiImage(spec: ImageSpec.fromJson({"src":"f017","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":18}));
    static UiImage get starFilled => Styles().images.getImage('star-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-star-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get starPartiallyFilled => Styles().images.getImage('star-partially-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf5c0","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":19}));
    static UiImage get thumbsUpFilled => Styles().images.getImage('thumbs-up-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-thumbs-up-solid.png","type":"flutter.asset","color":"fillColorSecondary","size":18}));
    static UiImage get campusToolsFilled => Styles().images.getImage('campus-tools-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-browse-selected.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"remove if not used"}));
    static UiImage get browseFilled => Styles().images.getImage('browse-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf0c9","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":18,"todo":"size"}));
    static UiImage get checkBoxFilled => Styles().images.getImage('check-box-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/selected-checkbox.png","type":"flutter.asset","color-todo":"fillColorPrimary","size":24,"todo":"when to use box vs circle, color issue"}));
    static UiImage get checkCircleFilled => Styles().images.getImage('check-circle-filled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/deselected-dark.png","type":"flutter.asset","color-todo":"fillColorPrimary","size":24,"todo":"color issue"}));
    static UiImage get circleOutline => Styles().images.getImage('circle-outline') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/oval-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":24}));
    static UiImage get checkCircleOutline => Styles().images.getImage('check-circle-outline') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf111","type":"fa.icon","weight":"thin","color":"fillColorSecondary","size":20}));
    static UiImage get checkCircleOutline2 => Styles().images.getImage('check-circle-outline-2') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/deselected.png","type":"flutter.asset","color":"surface","size":24}));
    static UiImage get locationOutline => Styles().images.getImage('location-outline') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-map-view.png","type":"flutter.asset","color":"fillColorSecondary","size":18,"todo":"size issue"}));
    static UiImage get listOutline => Styles().images.getImage('list-outline') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-list-view.png","type":"flutter.asset","color":"fillColorSecondary","size":16,"todo":"size issue"}));
    static UiImage get starOutlineGray => Styles().images.getImage('star-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf005","type":"fa.icon","weight":"regular","color":"mediumGray","size":18}));
    static UiImage get thumbsUpOutlineGray => Styles().images.getImage('thumbs-up-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-thumbs-up-outline.png","type":"flutter.asset","color":"mediumGray","size":18}));
    static UiImage get checkCircleOutlineGray => Styles().images.getImage('check-circle-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf111","type":"fa.icon","weight":"thin","color":"mediumGray","size":20}));
    static UiImage get checkCircleOutlineGray2 => Styles().images.getImage('check-circle-outline-gray-2') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/deselected.png","type":"flutter.asset","color":"mediumGray","size":24}));
    static UiImage get boxOutlineGray => Styles().images.getImage('box-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/deselected-checkbox.png","type":"flutter.asset","color":"mediumGray","size":24}));
    static UiImage get locationOutlineGray => Styles().images.getImage('location-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-navigate.png","type":"flutter.asset","color":"mediumGray","size":18,"todo":"size"}));
    static UiImage get campusToolsOutlineGray => Styles().images.getImage('campus-tools-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-browse.png","type":"flutter.asset","color":"mediumGray","size":18,"todo":"remove if not used"}));
    static UiImage get browseOutlineGray => Styles().images.getImage('browse-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf0c9","type":"fa.icon","weight":"solid","color":"mediumGray","size":18}));
    static UiImage get searchOutlineGray => Styles().images.getImage('search-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-search.png","type":"flutter.asset","color":"mediumGray","size":18}));
    static UiImage get boxInsideGray => Styles().images.getImage('box-inside-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/disabled-checkbox.png","type":"flutter.asset","color":"mediumGray2","size":24}));
    static UiImage get boxInsideLightGray => Styles().images.getImage('box-inside-light-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/partial-selected-checkbox.png","type":"flutter.asset","color":"mediumGray2","size":24}));
    static UiImage get chevronLeft => Styles().images.getImage('chevron-left') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-left-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":10,"todo":"size issue?"}));
    static UiImage get chevronRight => Styles().images.getImage('chevron-right') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-right-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":10,"todo":"size issue?"}));
    static UiImage get chevronUp => Styles().images.getImage('chevron-up') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-up-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":10,"todo":"size issue?"}));
    static UiImage get chevronDown => Styles().images.getImage('chevron-down') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-down-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":10,"todo":"size issue?"}));
    static UiImage get chevronLeftBold => Styles().images.getImage('chevron-left-bold') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-left.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"size issue?"}));
    static UiImage get chevronRightBold => Styles().images.getImage('chevron-right-bold') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-right.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"size issue?"}));
    static UiImage get iconUpOrange => Styles().images.getImage('icon-up-orange') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-up.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"size issue?"}));
    static UiImage get iconDownOrange => Styles().images.getImage('icon-down-orange') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-down-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"size issue?"}));
    static UiImage get iconUpBlue => Styles().images.getImage('icon-up-blue') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-up.png","type":"flutter.asset","color":"fillColorPrimary","size":14,"todo":"size issue?"}));
    static UiImage get iconDownBlue => Styles().images.getImage('icon-down-blue') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-down.png","type":"flutter.asset","color":"fillColorPrimary","size":14,"todo":"size issue?"}));
    static UiImage get plusCircleLarge => Styles().images.getImage('plus-circle-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/button-plus-orange.png","type":"flutter.asset","color":"fillColorSecondary","size":34}));
    static UiImage get closeCircle => Styles().images.getImage('close-circle') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf057","type":"fa.icon","weight":"regular","color":"fillColorSecondary","size":24}));
    static UiImage get closeCircleWhite => Styles().images.getImage('close-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf057","type":"fa.icon","weight":"regular","color":"surface","size":24}));
    static UiImage get closeCircleWhiteLarge => Styles().images.getImage('close-circle-white-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf057","type":"fa.icon","weight":"light","color":"surface","size":40}));
    static UiImage get moreWhite => Styles().images.getImage('more-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/groups-more-inactive.png","type":"flutter.asset","color":"surface","size":24}));
    static UiImage get circleOutlineWhite => Styles().images.getImage('circle-outline-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/oval-orange.png","type":"flutter.asset","color":"surface","size":24}));
    static UiImage get checkCircleOutlineGrayWhite => Styles().images.getImage('check-circle-outline-gray-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf111","type":"fa.icon","weight":"thin","color":"surface","size":20,"todo":"remove if not needed"}));
    static UiImage get checkCircleOutlineGrayWhite2 => Styles().images.getImage('check-circle-outline-gray-white-2') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/deselected.png","type":"flutter.asset","weight":"thin","color":"surface","size":24,"todo":"remove if not needed"}));
    static UiImage get settingsWhite => Styles().images.getImage('settings-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/settings-white.png","type":"flutter.asset","color":"surface","size":16,"todo":"wrong size"}));
    static UiImage get chevronLeftWhite => Styles().images.getImage('chevron-left-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-left-white.png","type":"flutter.asset","color":"surface","size":14,"todo":"size issue?"}));
    static UiImage get chevronRightWhite => Styles().images.getImage('chevron-right-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-right-white.png","type":"flutter.asset","color":"surface","size":14,"todo":"size issue?"}));
    static UiImage get chevronUpWhite => Styles().images.getImage('chevron-up-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-up-orange.png","type":"flutter.asset","color":"surface","size":10,"todo":"size issue?"}));
    static UiImage get chevronDownWhite => Styles().images.getImage('chevron-down-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-down-orange.png","type":"flutter.asset","color":"surface","size":10,"todo":"size issue?"}));
    static UiImage get editWhite => Styles().images.getImage('edit-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf044","type":"fa.icon","weight":"solid","color":"surface","size":20,"todo":"remove if not neefed"}));
    static UiImage get starWhite => Styles().images.getImage('star-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-star-white.png","type":"flutter.asset","color-todo":"surface","size":18,"todo":"color issue?"}));
    static UiImage get dragWhite => Styles().images.getImage('drag-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf7a4","type":"fa.icon","weight":"solid","color":"mediumGrey","size":20}));
    static UiImage get radioWhite => Styles().images.getImage('radio-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf58f","type":"fa.icon","weight":"solid","color":"surface","size":20}));
    static UiImage get personCircleWhite => Styles().images.getImage('person-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/person-white.png","type":"flutter.asset","color":"surface","size":18}));
    static UiImage get plusCircleWhite => Styles().images.getImage('plus-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icons-control-add-small-white.png","type":"flutter.asset","color":"surface","size":18}));
    static UiImage get minusCircleWhite => Styles().images.getImage('minus-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-decrease.png","type":"flutter.asset","color":"surface","size":18}));
    static UiImage get notificationWhite => Styles().images.getImage('notification-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/notifications-blue.png","type":"flutter.asset","color":"surface","size":16,"todo":"size"}));
    static UiImage get playCircleWhite => Styles().images.getImage('play-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-watch.png","type":"flutter.asset","color":"surface","size":32}));
    static UiImage get clockWhite => Styles().images.getImage('clock-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"f017","type":"fa.icon","weight":"regular","color":"surface","size":18}));
    //static UiImage get commentVacuumStart => Styles().images.getImage('_comment-vacuum-start') ?? UiImage(spec: ImageSpec.fromJson("Below is a sample for fa pro icons. Remove them when there is no need."));
    static UiImage get lightVacuum => Styles().images.getImage('lightVacuum') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xe04d","type":"fa.icon","weight":"light","color":"fillColorSecondary","size":38}));
    static UiImage get thinVacuum => Styles().images.getImage('thinVacuum') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xe04d","type":"fa.icon","weight":"thin","color":"fillColorSecondary","size":38}));
    static UiImage get solidVacuum => Styles().images.getImage('solidVacuum') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xe04d","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":38}));
    //static UiImage get commentVacuumEnd => Styles().images.getImage('_comment-vacuum-end') ?? UiImage(spec: ImageSpec.fromJson("Above is a sample for fa pro icons. Remove them when there is no need."));
    static UiImage get retryGray => Styles().images.getImage('retry-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2f9","type":"fa.icon","weight":"solid","size":18.0,"color":"mediumGray"}));
    static UiImage get circleOutlineGray => Styles().images.getImage('circle-outline-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/oval-orange.png","type":"flutter.asset","color":"mediumGray","size":24}));
    static UiImage get chevronUpGray => Styles().images.getImage('chevron-up-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-up-orange.png","type":"flutter.asset","color":"mediumGray","size":10,"todo":"size issue?"}));
    static UiImage get chevronDownGray => Styles().images.getImage('chevron-down-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/arrow-down-orange.png","type":"flutter.asset","color":"mediumGray","size":10,"todo":"size issue?"}));
    static UiImage get chevronRightGray => Styles().images.getImage('chevron-right-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-right-gray.png","type":"flutter.asset","color":"mediumGray","size":14,"todo":"size issue?"}));
    static UiImage get chevronLeftGray => Styles().images.getImage('chevron-left-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/chevron-left-gray.png","type":"flutter.asset","color":"mediumGray","size":14,"todo":"size issue?"}));
    static UiImage get starGray => Styles().images.getImage('star-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf5c0","type":"fa.icon","weight":"regular","color":"mediumGray","size":19,"todo":"remove if not used. Replaced with star-partially-filled"}));
    static UiImage get wellnessGray0 => Styles().images.getImage('wellness-gray-0') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-wellness.png","type":"flutter.asset","color":"mediumGray","size":28,"todo":"size issue"}));
    static UiImage get wellnessGray => Styles().images.getImage('wellness-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-wellness-universal.png","type":"flutter.asset","color":"mediumGray","size":24}));
    static UiImage get academicsGray0 => Styles().images.getImage('academics-gray-0') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-academics.png","type":"flutter.asset","size":18,"todo":"color issue"}));
    static UiImage get academicsGray => Styles().images.getImage('academics-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-academics-universal.png","type":"flutter.asset","size":18,"color":"mediumGray"}));
    static UiImage get compassGray => Styles().images.getImage('compass-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-explore.png","type":"flutter.asset","color":"mediumGray","size":18}));
    static UiImage get homeGray => Styles().images.getImage('home-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/tab-home.png","type":"flutter.asset","color":"mediumGray","size":24,"todo":"size issue, unused?"}));
    static UiImage get addGray => Styles().images.getImage('add-gray') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icons-control-add-blue.png","type":"flutter.asset","color":"mediumGray","size":18}));
    static UiImage get checkGreen => Styles().images.getImage('check-green') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/green-check-mark.png","type":"flutter.asset","size":18}));
    static UiImage get checkAccent => Styles().images.getImage('check-accent') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf00c","type":"fa.icon","weight":"solid","color":"fillColorSecondary","size":20}));
    static UiImage get closeDark => Styles().images.getImage('close-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/close-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":24}));
    static UiImage get italicDark => Styles().images.getImage('italic-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-italic.png","type":"flutter.asset","color":"fillColorPrimary","size":18}));
    static UiImage get boldDark => Styles().images.getImage('bold-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-bold.png","type":"flutter.asset","color":"fillColorPrimary","size":18}));
    static UiImage get underlineDark => Styles().images.getImage('underline-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-underline.png","type":"flutter.asset","color":"fillColorPrimary","size":18}));
    static UiImage get externalLinkDark => Styles().images.getImage('external-link-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf08e","type":"fa.icon","weight":"solid","color":"fillColorPrimary","size":15}));
    static UiImage get starDark => Styles().images.getImage('star-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf5c0","type":"fa.icon","weight":"regular","color":"fillColorPrimary","size":19}));
    static UiImage get historyDark => Styles().images.getImage('history-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get historyDisabledDark => Styles().images.getImage('history-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get viewDark => Styles().images.getImage('view-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/view-only-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":18,"todo":"size"}));
    static UiImage get locationDark => Styles().images.getImage('location-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/location-sharing-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get locationDisabledDark => Styles().images.getImage('location-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/location-sharing-blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get slidersDark => Styles().images.getImage('sliders-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/personalization-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get slidersDisabledDark => Styles().images.getImage('sliders-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/personalization-blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get notificationDark => Styles().images.getImage('notification-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/notifications-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get notificationDisabledDark => Styles().images.getImage('notification-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/notifications-blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get personDark => Styles().images.getImage('person-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/identiy-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get personDisabledDark => Styles().images.getImage('person-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/identiy-blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get shareDark => Styles().images.getImage('share-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/share-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":16,"todo":"size"}));
    static UiImage get shareDisabledDark => Styles().images.getImage('share-disabled-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/share-blue-off.png","type":"flutter.asset","size":16,"todo":"size, color?"}));
    static UiImage get slantDark => Styles().images.getImage('slant-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/slant-down-right-blue.png","color":"fillColorPrimary","type":"flutter.asset"}));
    static UiImage get plusDark => Styles().images.getImage('plus-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icons-control-add-blue.png","type":"flutter.asset","color":"fillColorPrimary","size":18}));
    static UiImage get transitLogoCutoutDark => Styles().images.getImage('transit-logo-cutout-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf55e","type":"fa.icon","weight":"solid","color":"fillColorPrimary","size":20}));
    static UiImage get settingsWorking => Styles().images.getImage('settings-working') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-canvas-implemented-working.png","type":"flutter.asset","size":16,"todo":"color issue"}));
    static UiImage get settingsInProgress => Styles().images.getImage('settings-in-progress') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-canvas-partially-implemented.png","type":"flutter.asset","size":16,"todo":"color issue"}));
    static UiImage get profilePlaceholder => Styles().images.getImage('profile-placeholder') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/missing-profile-photo-placeholder.png","type":"flutter.asset","size":127,"todo":"bad size"}));
    static UiImage get newsPlaceholder => Styles().images.getImage('news-placeholder') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/daily-illini-placeholder.jpg","type":"flutter.asset","todo":"bad size"}));
    static UiImage get laundryPlaceholder => Styles().images.getImage('laundry-placeholder') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-laundry-machine-placeholder.jpg","type":"flutter.asset","todo":"bad size"}));
    static UiImage get exploreIllustration => Styles().images.getImage('explore-illustration') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/explore_illustration.png","type":"flutter.asset","todo":"size"}));
    static UiImage get lockIllustration => Styles().images.getImage('lock-illustration') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/lock_illustration.png","type":"flutter.asset","todo":"size"}));
    static UiImage get improveIllustration => Styles().images.getImage('improve-illustration') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/improve_illustration.png","type":"flutter.asset","todo":"size"}));
    static UiImage get personalizeIllustration => Styles().images.getImage('personalize-illustration') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group_138.png","type":"flutter.asset","todo":"size"}));
    static UiImage get wellnessWheel => Styles().images.getImage('wellness-wheel') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/wellness-wheel-2019.png","type":"flutter.asset"}));
    static UiImage get wellnessWheelSmall => Styles().images.getImage('wellness-wheel-small') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/wellness-wheel-thumbnail.png","type":"flutter.asset","size":45,"todo":"size"}));
    static UiImage get washer => Styles().images.getImage('washer') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-washer-small.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get washerLarge => Styles().images.getImage('washer-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-washer-big.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get dryer => Styles().images.getImage('dryer') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-dryer-small.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get dryerLarge => Styles().images.getImage('dryer-large') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-dryer-big.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get issue => Styles().images.getImage('issue') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-report-issue.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get buildingAccessGranted => Styles().images.getImage('building-access-granted') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-20.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get buildingAccessDenied => Styles().images.getImage('building-access-denied') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-28.png","type":"flutter.asset","todo":"bad size, color?"}));
    static UiImage get slant => Styles().images.getImage('slant') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/slant-down-right.png","color":"fillColorSecondary","type":"flutter.asset"}));
    static UiImage get questionnaire => Styles().images.getImage('questionnaire') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/questionnaire-icon.png","type":"flutter.asset","todo":"color, size"}));
    static UiImage get photoOnline => Styles().images.getImage('photo-online') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/appointment-detail-online-tout.jpg","type":"flutter.asset","todo":"color, size"}));
    static UiImage get photoBuilding => Styles().images.getImage('photo-building') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/appointment-detail-inperson-tout.png","type":"flutter.asset","todo":"size"}));
    static UiImage get photoGrainger1 => Styles().images.getImage('photo-grainger-1') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/appointment-unit-grainger-tout-1.jpg","type":"flutter.asset","todo":"color, size"}));
    static UiImage get photoGrainger2 => Styles().images.getImage('photo-grainger-2') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/appointment-unit-grainger-tout-2.jpg","type":"flutter.asset","todo":"size"}));
    static UiImage get toggleOn => Styles().images.getImage('toggle-on') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/switch-on.png","type":"flutter.asset","todo":"color issue, fuzzy"}));
    static UiImage get toggleOff => Styles().images.getImage('toggle-off') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/switch-off.png","type":"flutter.asset","todo":"color issue, fuzzy"}));
    static UiImage get toggleDisabled => Styles().images.getImage('toggle-disabled') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/off.png","type":"flutter.asset","todo":"cut-off, color issue, fuzzy"}));
    static UiImage get radioButtonOn => Styles().images.getImage('radio-button-on') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-favorite-selected.png","type":"flutter.asset","todo":"color issue"}));
    static UiImage get radioButtonOff => Styles().images.getImage('radio-button-off') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-favorite-deselected.png","type":"flutter.asset","todo":"color issue"}));
    static UiImage get universityLogo => Styles().images.getImage('university-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/block-i-orange.png","type":"flutter.asset"}));
    static UiImage get universityLogoDarkFrame => Styles().images.getImage('university-logo-dark-frame') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/block-i-orange-blue.png","type":"flutter.asset"}));
    static UiImage get universityLogoOvalWhite => Styles().images.getImage('university-logo-oval-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/block-i-orange-oval.png","type":"flutter.asset"}));
    static UiImage get universityLogoDark => Styles().images.getImage('university-logo-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/illinois-blockI-blue.png","type":"flutter.asset"}));
    static UiImage get universityLogoCircleWhite => Styles().images.getImage('university-logo-circle-white') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-5-white.png","type":"flutter.asset"}));
    static UiImage get universityLogoCircleDark => Styles().images.getImage('university-logo-circle-dark') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/group-5-blue.png","type":"flutter.asset"}));
    static UiImage get transitLogo => Styles().images.getImage('transit-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/mtd-logo.png","type":"flutter.asset"}));
    static UiImage get facebookLogo => Styles().images.getImage('facebook-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/fb-16x32.png","type":"flutter.asset","todo":"size?"}));
    static UiImage get twitterLogo => Styles().images.getImage('twitter-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/twitter-32x28.png","type":"flutter.asset","todo":"size?"}));
    static UiImage get youtubeLogo => Styles().images.getImage('youtube-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/you-tube-32x24.png","type":"flutter.asset","todo":"size?"}));
    static UiImage get instagramLogo => Styles().images.getImage('instagram-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/ig-32x32.png","type":"flutter.asset","todo":"size?"}));
    static UiImage get splash => Styles().images.getImage('splash') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/splash_image.png","type":"flutter.asset"}));
    static UiImage get headerLogin => Styles().images.getImage('header-login') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/login-header.png","type":"flutter.asset"}));
    static UiImage get headerLocation => Styles().images.getImage('header-location') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/share-location-header.png","type":"flutter.asset"}));
    static UiImage get headerQuestionnaire => Styles().images.getImage('header-questionnaire') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/questionnaire-header.png","type":"flutter.asset"}));
    static UiImage get headerPrivacy => Styles().images.getImage('header-privacy') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/privacy-header.png","type":"flutter.asset"}));
    static UiImage get headerNotifications => Styles().images.getImage('header-notifications') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/allow-notifications-header.png","type":"flutter.asset"}));
    static UiImage get browseEvents => Styles().images.getImage('browse-events') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-events.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseDining => Styles().images.getImage('browse-dining') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-dinings.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseGroups => Styles().images.getImage('browse-groups') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-groups.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseStudentCash => Styles().images.getImage('browse-student-cash') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-illini-cash.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseAthletics => Styles().images.getImage('browse-athletics') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-athletics.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseInbox => Styles().images.getImage('browse-inbox') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-inbox.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseLaundry => Styles().images.getImage('browse-laundry') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-laundry.png","type":"flutter.asset","color":"fillColorSecondary","todo":"color, size"}));
    static UiImage get browseStudentPortal => Styles().images.getImage('browse-student-portal') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-my-illini.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browsePrivacy => Styles().images.getImage('browse-privacy') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-privacy-center.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browsePolls => Styles().images.getImage('browse-polls') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-quick-polls.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseWellness => Styles().images.getImage('browse-wellness') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-wellness.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseCrisis => Styles().images.getImage('browse-crisis') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-crisis-help.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseSaved => Styles().images.getImage('browse-saved') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-saved.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get browseGuide => Styles().images.getImage('browse-guide') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-browse-campus-guide.png","type":"flutter.asset","color":"fillColorSecondary","todo":"size"}));
    static UiImage get guideAthletics => Styles().images.getImage('guide-athletics') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-athletics.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideBusPass => Styles().images.getImage('guide-bus-pass') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-bus-pass.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideDining => Styles().images.getImage('guide-dining') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-dining.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideEvents => Styles().images.getImage('guide-events') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-events.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideGroups => Styles().images.getImage('guide-groups') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-groups.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideStudentCash => Styles().images.getImage('guide-student-cash') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-illini-cash.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideStudentId => Styles().images.getImage('guide-student-id') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-illini-id.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideLaundry => Styles().images.getImage('guide-laundry') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-laundry.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideLibraryCard => Styles().images.getImage('guide-library-card') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-library-card.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideMealPlan => Styles().images.getImage('guide-meal-plan') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-meal-plan.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideStudentPortal => Styles().images.getImage('guide-student-portal') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-my-illini.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideParking => Styles().images.getImage('guide-parking') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-parking.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guidePolls => Styles().images.getImage('guide-polls') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-quick-polls.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get guideSaved => Styles().images.getImage('guide-saved') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-student-guide-saved.png","type":"flutter.asset","size":50,"todo":"color"}));
    static UiImage get roleStudent => Styles().images.getImage('role-student') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-student-normal.png","type":"flutter.asset"}));
    static UiImage get roleVisitor => Styles().images.getImage('role-visitor') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-visitor-normal.png","type":"flutter.asset"}));
    static UiImage get roleAthletics => Styles().images.getImage('role-athletics') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-athletics-normal.png","type":"flutter.asset"}));
    static UiImage get roleEmployee => Styles().images.getImage('role-employee') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-employee-normal.png","type":"flutter.asset"}));
    static UiImage get roleAlumni => Styles().images.getImage('role-alumni') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-alumni-normal.png","type":"flutter.asset"}));
    static UiImage get roleParent => Styles().images.getImage('role-parent') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-persona-parent-normal.png","type":"flutter.asset"}));
    static UiImage get paymentMeal => Styles().images.getImage('payment-meal') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-classic-meal.png","type":"flutter.asset"}));
    static UiImage get paymentDining => Styles().images.getImage('payment-dining') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-dining-dollars.png","type":"flutter.asset"}));
    static UiImage get paymentStudentCash => Styles().images.getImage('payment-student-cash') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-ilini-cash.png","type":"flutter.asset"}));
    static UiImage get paymentCreditCard => Styles().images.getImage('payment-credit-card') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-credit-card.png","type":"flutter.asset"}));
    static UiImage get paymentCash => Styles().images.getImage('payment-cash') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-cache.png","type":"flutter.asset"}));
    static UiImage get paymentGooglePay => Styles().images.getImage('payment-google-pay') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-google-pay.png","type":"flutter.asset"}));
    static UiImage get paymentApplePay => Styles().images.getImage('payment-apple-pay') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-payment-type-apple-pay.png","type":"flutter.asset"}));
    static UiImage get mobileAccessLogo => Styles().images.getImage('mobile-access-logo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/hid-logo.png","type":"flutter.asset"}));
    static UiImage get eventDetailDefault => Styles().images.getImage('event-detail-default') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/event-detail-default.png","type":"flutter.asset"}));
    static UiImage get eventSaveToCalendar => Styles().images.getImage('event-save-to-calendar') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-save.png","type":"flutter.asset"}));
    static UiImage get eventFiltersBackground => Styles().images.getImage('event-filters-background') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/event-filters-background.png","type":"flutter.asset"}));
    static UiImage get eventOnboardingHeader => Styles().images.getImage('event-onboarding-header') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/event-onboarding-header.png","type":"flutter.asset"}));
    static UiImage get iconRecord => Styles().images.getImage('icon-record') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-record.png","type":"flutter.asset"}));
    static UiImage get iconRecording => Styles().images.getImage('icon-recording') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-recording.png","type":"flutter.asset"}));
    static UiImage get iconPlay => Styles().images.getImage('icon-play') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-play.png","type":"flutter.asset"}));
    static UiImage get iconDeleteRecord => Styles().images.getImage('icon-delete-record') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-delete-record.png","type":"flutter.asset","size":18}));
    static UiImage get iconSoundbyte => Styles().images.getImage('icon-soundbyte') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/icon-soundbyte.png","type":"flutter.asset","size":18}));
    static UiImage get courseDetailDefault => Styles().images.getImage('course-detail-default') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/course-detail-default.png","type":"flutter.asset"}));
    static UiImage get skillsSocial => Styles().images.getImage('skills-social') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/skills_social.png","type":"flutter.asset"}));
    static UiImage get skillsManagement => Styles().images.getImage('skills-management') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/management.png","type":"flutter.asset"}));
    static UiImage get skillsCooperation => Styles().images.getImage('skills-cooperation') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/cooperation.png","type":"flutter.asset"}));
    static UiImage get skillsEmotional => Styles().images.getImage('skills-emotional') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/emotional_skills.png","type":"flutter.asset"}));
    static UiImage get skillsInnovation => Styles().images.getImage('skills-innovation') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/innovation.png","type":"flutter.asset"}));
    static UiImage get skillsPlay => Styles().images.getImage('skills-play') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/play.png","type":"flutter.asset","size":48}));
    static UiImage get skillsQuestion => Styles().images.getImage('skills-question') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/question.png","type":"flutter.asset","size":48}));
    static UiImage get skillsCheck => Styles().images.getImage('skills-check') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/check.png","type":"flutter.asset","size":48}));
    static UiImage get skillsSocialButton => Styles().images.getImage('skills-social-button') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/skills_social_button.png","type":"flutter.asset","size":48}));
    static UiImage get skillsManagementButton => Styles().images.getImage('skills-management-button') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/management_button.png","type":"flutter.asset","size":48}));
    static UiImage get skillsCooperationButton => Styles().images.getImage('skills-cooperation-button') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/cooperation_button.png","type":"flutter.asset","size":48}));
    static UiImage get skillsEmotionalButton => Styles().images.getImage('skills-emotional-button') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/emotional_skills_button.png","type":"flutter.asset","size":48}));
    static UiImage get skillsInnovationButton => Styles().images.getImage('skills-innovation-button') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/innovation_button.png","type":"flutter.asset","size":48}));
    static UiImage get skillsSpeechMic => Styles().images.getImage('skills-speech-mic') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf130","type":"fa.icon","weight":"solid","size":25}));
    static UiImage get skillsSpeechPause => Styles().images.getImage('skills-speech-pause') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf04c","type":"fa.icon","weight":"solid","size":25}));
    static UiImage get lock => Styles().images.getImage('lock') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf023","type":"fa.icon","weight":"solid","color":"surface","size":48}));
    static UiImage get closedBook => Styles().images.getImage('closed-book') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf02d","type":"fa.icon","weight":"solid","color":"fillColorPrimary","size":30}));
    static UiImage get textIcon => Styles().images.getImage('text-icon') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/text-icon.png","type":"flutter.asset","size":35}));
    static UiImage get linkIcon => Styles().images.getImage('link-icon') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/external-link-icon.png","type":"flutter.asset","size":35}));
    static UiImage get pdfIcon => Styles().images.getImage('pdf-icon') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/pdf-icon.png","type":"flutter.asset","size":35}));
    static UiImage get powerpointIcon => Styles().images.getImage('powerpoint-icon') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/powerpoint.png","type":"flutter.asset","size":35}));
    static UiImage get videoIcon => Styles().images.getImage('video-icon') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/blue-play.png","type":"flutter.asset","size":35}));
    static UiImage get streak => Styles().images.getImage('streak') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/streak.png","type":"flutter.asset","size":240}));
    static UiImage get pauseFilledBlue => Styles().images.getImage('pause-filled-blue') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/pause-filled-blue.png","type":"flutter.asset","size":32}));
    static UiImage get pauseEmptyBlue => Styles().images.getImage('pause-empty-blue') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/pause-empty-blue.png","type":"flutter.asset","size":32}));
    static UiImage get externalLinkSmall => Styles().images.getImage('external-link-small') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/external-link.png","type":"flutter.asset","color":"fillColorSecondary","size":14,"todo":"wrong size"}));
    static UiImage get externalLinkMedium => Styles().images.getImage('external-link-medium') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/external-link.png","type":"flutter.asset","color":"fillColorSecondary","size":20,"todo":"wrong size"}));
    static UiImage get defaultProfilePhoto => Styles().images.getImage('default-profile-photo') ?? UiImage(spec: ImageSpec.fromJson({"src":"images/default-profile-photo.png","type":"flutter.asset"}));
    static UiImage get profile => Styles().images.getImage('profile') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2bd","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get retryMedium => Styles().images.getImage('retry-medium') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2f9","type":"fa.icon","weight":"solid","size":18.0,"color":"iconMedium"}));
}
